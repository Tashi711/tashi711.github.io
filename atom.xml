<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tashi711的博客</title>
  
  <subtitle>過去（きのう）に傷付きながらも、信じ続ける理想（ゆめ）を求める。いつか無限（なないろ）に輝き放って、青空（そら）に橋を描く。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://tashi711.top/"/>
  <updated>2020-02-06T15:16:16.050Z</updated>
  <id>http://tashi711.top/</id>
  
  <author>
    <name>Tashi711</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>「back number - クリスマスソング」</title>
    <link href="http://tashi711.top/nihongo/uta/kurisumasusongu/"/>
    <id>http://tashi711.top/nihongo/uta/kurisumasusongu/</id>
    <published>2020-02-07T04:00:00.000Z</published>
    <updated>2020-02-06T15:16:16.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌曲信息"><a href="#歌曲信息" class="headerlink" title="歌曲信息"></a>歌曲信息</h2><blockquote><ul><li>歌曲：クリスマスソング</li><li>歌手：back number</li><li>作词：清水依与吏</li><li>作曲：清水依与吏</li><li>专辑：クリスマスソング（2015年11月18日发行）</li></ul></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>很久以前某个圣诞节偶然听到，一直觉得很好听，今年再次听到之后特别有想学的感觉。好像是一部很热的日剧的主题曲<del>，查了下，是「5→9〜私に恋したお坊さん〜」</del>，back number的声线也非常好听，感觉很适合自己唱。</p><a id="more"></a><h2 id="假名歌词"><a href="#假名歌词" class="headerlink" title="假名歌词"></a>假名歌词</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">どこかで鐘（かね）が鳴（な）って</span><br><span class="line">らしくない言葉（ことば）が浮（う）かんで</span><br><span class="line">寒（さむ）さが心地（ここち）よくて</span><br><span class="line">あれ　なんで恋（こい）なんかしてんだろう</span><br><span class="line"></span><br><span class="line">聖夜（せいや）だなんだと</span><br><span class="line">繰（く）り返（かえ）す歌（うた）と</span><br><span class="line">わざとらしくきらめく</span><br><span class="line">街（まち）のせいかな</span><br><span class="line"></span><br><span class="line">会（あ）いたいと思（おも）う回数（かいすう）が</span><br><span class="line">会（あ）えないと痛（いた）いこの胸（むね）が</span><br><span class="line">君（きみ）の事（こと）どう思（おも）うか</span><br><span class="line">教（おし）えようとしてる</span><br><span class="line"></span><br><span class="line">いいよ　そんな事（こと）自分（じぶん）で</span><br><span class="line">分（わ）かってるよ</span><br><span class="line">サンタとやらに頼（たの）んでも</span><br><span class="line">仕方（しかた）ないよなぁ</span><br><span class="line"></span><br><span class="line">できれば横（よこ）にいて欲（ほ）しくて</span><br><span class="line">どこにも行（い）って欲（ほ）しくなくて</span><br><span class="line">僕（ぼく）の事（こと）だけを</span><br><span class="line">ずっと考（かんが）えていて欲（ほ）しい</span><br><span class="line"></span><br><span class="line">でもこんな事（こと）を伝（つた）えたら</span><br><span class="line">格好（かっこう）悪（わる）いし</span><br><span class="line">長（なが）くなるだけだからまとめるよ</span><br><span class="line">君（きみ）が好（す）きだ</span><br><span class="line"></span><br><span class="line">はしゃぐ恋人達（こいびとたち）は</span><br><span class="line">トナカイのツノなんか生（は）やして</span><br><span class="line">よく人前（ひとまえ）で出来（でき）るなぁ</span><br><span class="line">いや羨（うらや）ましくなんてないけど</span><br><span class="line"></span><br><span class="line">君（きみ）が喜（よろこ）ぶプレゼントって</span><br><span class="line">なんだろう</span><br><span class="line">僕（ぼく）だけがあげられる</span><br><span class="line">ものってなんだろう</span><br><span class="line"></span><br><span class="line">大好（だいす）きだと言（い）った返事（へんじ）が</span><br><span class="line">思（おも）ってたのとは違（ちが）っても</span><br><span class="line">それだけで嫌（きら）いになんて</span><br><span class="line">なれやしないから</span><br><span class="line"></span><br><span class="line">星（ほし）に願（ねが）いをなんてさ</span><br><span class="line">柄（がら）じゃないけど</span><br><span class="line">結局（けっきょく）君（きみ）じゃないと嫌（いや）なんだって</span><br><span class="line">見上（みあ）げてるんだ</span><br><span class="line"></span><br><span class="line">あの時（とき）君（きみ）に</span><br><span class="line">出会（であ）ってただそれだけで</span><br><span class="line">自分（じぶん）も知（し）らなかった</span><br><span class="line">自分（じぶん）が次（つぎ）から次（つぎ）に</span><br><span class="line"></span><br><span class="line">会（あ）いたいと毎日（まいにち）思（おも）ってて</span><br><span class="line">それを君（きみ）に知（し）って欲（ほ）しくて</span><br><span class="line">すれ違（ちが）う人混（ひとご）みに</span><br><span class="line">君（きみ）を探（さが）している</span><br><span class="line"></span><br><span class="line">こんな日（ひ）は他（ほか）の誰（だれ）かと</span><br><span class="line">笑（わら）ってるかな</span><br><span class="line">胸（むね）の奥（おく）の奥（おく）が</span><br><span class="line">苦（くる）しくなる</span><br><span class="line"></span><br><span class="line">できれば横（よこ）にいて欲（ほ）しくて</span><br><span class="line">どこにも行（い）って欲（ほ）しくなくて</span><br><span class="line">僕（ぼく）の事（こと）だけを</span><br><span class="line">ずっと考（かんが）えていて欲（ほ）しい</span><br><span class="line"></span><br><span class="line">やっぱりこんな事（こと）伝（つた）えたら</span><br><span class="line">格好（かっこう）悪（わる）いし</span><br><span class="line">長（なが）くなるだけだからまとめるよ</span><br><span class="line">君（きみ）が好（す）きだ</span><br><span class="line"></span><br><span class="line">聞（き）こえるまで何度（なんど）だって言（い）うよ</span><br><span class="line">君（きみ）が好（す）きだ</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;歌曲信息&quot;&gt;&lt;a href=&quot;#歌曲信息&quot; class=&quot;headerlink&quot; title=&quot;歌曲信息&quot;&gt;&lt;/a&gt;歌曲信息&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;歌曲：クリスマスソング&lt;/li&gt;
&lt;li&gt;歌手：back number&lt;/li&gt;
&lt;li&gt;作词：清水依与吏&lt;/li&gt;
&lt;li&gt;作曲：清水依与吏&lt;/li&gt;
&lt;li&gt;专辑：クリスマスソング（2015年11月18日发行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;很久以前某个圣诞节偶然听到，一直觉得很好听，今年再次听到之后特别有想学的感觉。好像是一部很热的日剧的主题曲&lt;del&gt;，查了下，是「5→9〜私に恋したお坊さん〜」&lt;/del&gt;，back number的声线也非常好听，感觉很适合自己唱。&lt;/p&gt;
    
    </summary>
    
      <category term="ニホンゴ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/"/>
    
      <category term="ウタ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/%E3%82%A6%E3%82%BF/"/>
    
    
      <category term="back number" scheme="http://tashi711.top/tags/back-number/"/>
    
  </entry>
  
  <entry>
    <title>云顶之弈第二赛季小结</title>
    <link href="http://tashi711.top/nichijyou/tft-set-2/"/>
    <id>http://tashi711.top/nichijyou/tft-set-2/</id>
    <published>2020-02-06T04:00:00.000Z</published>
    <updated>2020-02-05T16:41:32.017Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p>这个赛季的云顶之弈终于上到了铂金，完成了一个flag，其实这个目标很小，第一赛季的时候自己冲到了铂金1，可惜到最后的版本怎么也打不动了，最终没冲到钻石，但是我的隐藏分其实已经到了钻石，从最近的几场排位匹配数据来看都是匹配到的钻石段位的人，而且自己目前的分数也其实还在增长阶段（大概第一名能加70多分），但确实这个赛季就快要结束了，再加上没有什么特别让人有奋斗欲望的赛季奖励，朝着钻石冲可能很累，就这样了。</p><h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><p>这个赛季其实排位玩的并不多，上到铂金4只用了43局，吃鸡了11局（25.6%），相较于第一赛季到铂金1用了130局，吃鸡了26局（20.0%）。这个赛季遗憾的是没有满血吃过鸡，而上个赛季用恶魔吃过一次，不过这也说明这个游戏其实更加的平衡了。而且最恐怖的是，我查了一下这个赛季吃鸡的这11局，全是海洋守护法（后简称法海），只有在匹配时用掠食者吃过一次，这也正好说明了一个问题，其实这个赛季的游戏相比于第一赛季，更考验玩家自己对阵容的理解，这种理解包括阵容搭配、装备、运营方式等等，毕竟法海并不算这个赛季最OP的阵容，相反，有数据统计，高端局中法海只是烂分阵容，往往吃不了鸡，在目前为止的10.1版本里，沙皇和游侠两套阵容才是最厉害的。某个王者段位的玩家用狂战上了绝大部分的分，但狂战甚至只能算这个版本T2级别的阵容，这也更能说明在这个版本对特定阵容的理解是很重要的。</p><a id="more"></a><h2 id="感想与展望"><a href="#感想与展望" class="headerlink" title="感想与展望"></a>感想与展望</h2><p>作为云顶之弈的忠实老玩家，从最开始还没排位的测试就一直玩到现在，真的是颇有感触，还记得那个时候鸟盾六法天下无敌，之后排位版本马上修改了鸟盾和旗子的作用方式，逐渐的，这个游戏开始火爆，那个时候我还在微软实习，自己在上海闵行的小小出租屋里，每天下班回去必定要跟几个朋友开黑玩几局。第一赛季各版本强势阵容我记得有六贵族天使、赌海盗枪、极地游侠、六刺、忍刺阿卡丽、狂野龙女、恶魔、动物园、斗枪金克斯、骑士德莱文、守护潘森、约德尔人、虚空赌刺、虚空卡莎等等，其中我印象最深的莫过于虚空斗法，我的绝大部分分都是在那个版本上上去的，其实那种版本并不健康，因为一种阵容相较于其他所有阵容都过于强大，导致最后大家都玩一样的，最后就看谁运气好，或者中间稍微带那么一点点谁理解更深刻，更会运营一点。云顶之弈到了第二赛季，人气大不如前，其实这也很能理解，从我的角度看，就是学习成本过于高，玩家们都需要重新推翻自己理解的一切，因此很多玩家对第二赛季的改版并不买单，甚至希望“文艺复兴”，其实我的看法是，这样的改动非常让人接受，毕竟旗子越加越多，会发现游戏因为抽不到卡而越来越靠运气，而游戏总是要不断加入新元素的，而且从我看来，第二赛季的可玩性并不比第一赛季差，甚至很多东西都更平衡，就像我刚才提到的对阵容理解的重要性大大提升。当然，游戏的设计师们需要考虑的也不是我一个小小铂金玩家的发言，而是绝大部分玩家的心声，那这就交给这些设计师们了。我自己是非常期待第三赛季的到来，立个flag，冲到钻石。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h2&gt;&lt;p&gt;这个赛季的云顶之弈终于上到了铂金，完成了一个flag，其实这个目标很小，第一赛季的时候自己冲到了铂金1，可惜到最后的版本怎么也打不动了，最终没冲到钻石，但是我的隐藏分其实已经到了钻石，从最近的几场排位匹配数据来看都是匹配到的钻石段位的人，而且自己目前的分数也其实还在增长阶段（大概第一名能加70多分），但确实这个赛季就快要结束了，再加上没有什么特别让人有奋斗欲望的赛季奖励，朝着钻石冲可能很累，就这样了。&lt;/p&gt;
&lt;h2 id=&quot;回顾&quot;&gt;&lt;a href=&quot;#回顾&quot; class=&quot;headerlink&quot; title=&quot;回顾&quot;&gt;&lt;/a&gt;回顾&lt;/h2&gt;&lt;p&gt;这个赛季其实排位玩的并不多，上到铂金4只用了43局，吃鸡了11局（25.6%），相较于第一赛季到铂金1用了130局，吃鸡了26局（20.0%）。这个赛季遗憾的是没有满血吃过鸡，而上个赛季用恶魔吃过一次，不过这也说明这个游戏其实更加的平衡了。而且最恐怖的是，我查了一下这个赛季吃鸡的这11局，全是海洋守护法（后简称法海），只有在匹配时用掠食者吃过一次，这也正好说明了一个问题，其实这个赛季的游戏相比于第一赛季，更考验玩家自己对阵容的理解，这种理解包括阵容搭配、装备、运营方式等等，毕竟法海并不算这个赛季最OP的阵容，相反，有数据统计，高端局中法海只是烂分阵容，往往吃不了鸡，在目前为止的10.1版本里，沙皇和游侠两套阵容才是最厉害的。某个王者段位的玩家用狂战上了绝大部分的分，但狂战甚至只能算这个版本T2级别的阵容，这也更能说明在这个版本对特定阵容的理解是很重要的。&lt;/p&gt;
    
    </summary>
    
      <category term="ガクセイジダイのニチジョウ" scheme="http://tashi711.top/categories/%E3%82%AC%E3%82%AF%E3%82%BB%E3%82%A4%E3%82%B8%E3%83%80%E3%82%A4%E3%81%AE%E3%83%8B%E3%83%81%E3%82%B8%E3%83%A7%E3%82%A6/"/>
    
    
      <category term="云顶之弈" scheme="http://tashi711.top/tags/%E4%BA%91%E9%A1%B6%E4%B9%8B%E5%BC%88/"/>
    
  </entry>
  
  <entry>
    <title>第四十二天后的日夜线</title>
    <link href="http://tashi711.top/maboroshi/42daily/"/>
    <id>http://tashi711.top/maboroshi/42daily/</id>
    <published>2020-02-05T04:00:00.000Z</published>
    <updated>2020-02-05T04:56:26.641Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ねぇ、ドーン"><a href="#ねぇ、ドーン" class="headerlink" title="ねぇ、ドーン"></a>ねぇ、ドーン</h2><p>コエも、イロも、ゲンも<br>無くなってしまった</p><p>他们<br>远行、并肩走去<br>再一次的欢呼<br>或许只是交织的一圈</p><p>看不见的光<br>释放<br>依旧屹立、ミライ<br>自习、陷入昏睡</p><p>即使没有不知所措的痛苦<br>自作主张<br>傅里叶远远的盘旋<br>定义、在那个轮回中消失殆尽</p><p>装修、看吧<br>探しても、力不从心<br>清除、又建立<br>ヘイボンなボク</p><a id="more"></a><p>ストレスのこと<br>吞噬细胞<br>也终于倒下<br>心魔伊始</p><p>func cnt()<br>标志的开始<br>跑着、远行着<br>終わりましょう、would be sleeping</p><p>十一点的闹钟<br>十四天的等待<br>不敢懈怠的孤独<br>在迷雾中、坚定的前行着</p><p>差强人意的<br>忙里偷闲而已<br>ダーウィンのユメ<br>コロンバスのヒカリ</p><p>红色的纸<br>等待着答案雀跃于上<br>数字的拯救<br>继续到来、一遍</p><p>戒断、又再一次戒断<br>或许很难到达的时刻、sealed<br>四千两百个小时<br>矗立与等待</p><p>断了的头<br>图片也压抑着<br>再一次陷入沉思<br>即使、是放下的</p><p>于是也行将赴远<br>再藏匿于心中<br>醒来、四十二万次的抽鞭<br>梦、也到底只能是梦</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这首诗也算是创作了蛮长时间，主要是幻化了那42天的经历，就像一场梦一样。一开始创作「移动的颜色」的时候其实是想包含这些故事，后来发现用“「神秘的一角」体”来叙述时已经完全超出规模，就把已经创作的内容存下来，直到今天继续创作。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ねぇ、ドーン&quot;&gt;&lt;a href=&quot;#ねぇ、ドーン&quot; class=&quot;headerlink&quot; title=&quot;ねぇ、ドーン&quot;&gt;&lt;/a&gt;ねぇ、ドーン&lt;/h2&gt;&lt;p&gt;コエも、イロも、ゲンも&lt;br&gt;無くなってしまった&lt;/p&gt;
&lt;p&gt;他们&lt;br&gt;远行、并肩走去&lt;br&gt;再一次的欢呼&lt;br&gt;或许只是交织的一圈&lt;/p&gt;
&lt;p&gt;看不见的光&lt;br&gt;释放&lt;br&gt;依旧屹立、ミライ&lt;br&gt;自习、陷入昏睡&lt;/p&gt;
&lt;p&gt;即使没有不知所措的痛苦&lt;br&gt;自作主张&lt;br&gt;傅里叶远远的盘旋&lt;br&gt;定义、在那个轮回中消失殆尽&lt;/p&gt;
&lt;p&gt;装修、看吧&lt;br&gt;探しても、力不从心&lt;br&gt;清除、又建立&lt;br&gt;ヘイボンなボク&lt;/p&gt;
    
    </summary>
    
      <category term="奇幻の私" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/"/>
    
      <category term="チュウニキョク" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B%E3%82%AD%E3%83%A7%E3%82%AF/"/>
    
    
      <category term="チュウニ" scheme="http://tashi711.top/tags/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B/"/>
    
  </entry>
  
  <entry>
    <title>移动的颜色</title>
    <link href="http://tashi711.top/maboroshi/nezumi/"/>
    <id>http://tashi711.top/maboroshi/nezumi/</id>
    <published>2020-01-25T04:00:00.000Z</published>
    <updated>2020-02-05T04:52:28.965Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ねぇ、ズミ"><a href="#ねぇ、ズミ" class="headerlink" title="ねぇ、ズミ"></a>ねぇ、ズミ</h2><p>庚子的颜色、在复杂的街道上弥漫着移动的味道<br>这座城市显得奇迹般悄无声息、毫无征兆警示着人类、终将会到来的</p><p>卑微的倒叙、两个阶梯连续下降、思绪漂流<br>老鼠穿上新衣、没有了那块缺失的颜色、显得单薄了些<br>口罩、掩盖着嘴唇、笼罩了天空、灰色又压抑的氮气<br>心灵悄悄地变幻、嘴角、不一样的形状</p><p>披着物是人非的勇气、游荡、双手插进大衣口袋<br>不足一刻的瞬间、转身瞥见一个身影、原来你也在<br>停留的考虑、已从大脑抹去、回过头继续走着<br>大多数选择的忘记、或许最终发现、是未读的剧情</p><a id="more"></a><p>突然、加快了脚步、脱身、脚步急促、配合着黑叶<br>无法逃脱笼罩的阴影、无论到哪、那个声音还在脑海中挥之不去<br>两个世界、似乎永远无法跨越、那段沟壑<br>默念答案、反复问自己到底在哪、ずっと、探していた</p><p>到来的疑惑、舒适圈外的不知所措、手捧着脸<br>仿佛已经不是自己、无法回答的动机<br>消逝在记忆中的寒冷、失ったもの、无法找寻<br>羡慕着青涩的被单、毫无期待的自己</p><p>编织、网络、连起两端的线<br>所谓温柔的平凡、不想只是标签罢了<br>注定停留的、放弃、或许是最好的回应吧<br>才想起那时候的不知所措</p><p>会好吗、窒息正好放弃、缺掉的那种颜色<br>不想回忆的回忆、梦开始继续、大有不同的坦然<br>改变与表现、难以面对或逃避、抱紧自己、即使没有那么多刻骨铭心<br>痊愈、顺利、永远无法实现的开启、颜色、继续移动着</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ねぇ、ズミ&quot;&gt;&lt;a href=&quot;#ねぇ、ズミ&quot; class=&quot;headerlink&quot; title=&quot;ねぇ、ズミ&quot;&gt;&lt;/a&gt;ねぇ、ズミ&lt;/h2&gt;&lt;p&gt;庚子的颜色、在复杂的街道上弥漫着移动的味道&lt;br&gt;这座城市显得奇迹般悄无声息、毫无征兆警示着人类、终将会到来的&lt;/p&gt;
&lt;p&gt;卑微的倒叙、两个阶梯连续下降、思绪漂流&lt;br&gt;老鼠穿上新衣、没有了那块缺失的颜色、显得单薄了些&lt;br&gt;口罩、掩盖着嘴唇、笼罩了天空、灰色又压抑的氮气&lt;br&gt;心灵悄悄地变幻、嘴角、不一样的形状&lt;/p&gt;
&lt;p&gt;披着物是人非的勇气、游荡、双手插进大衣口袋&lt;br&gt;不足一刻的瞬间、转身瞥见一个身影、原来你也在&lt;br&gt;停留的考虑、已从大脑抹去、回过头继续走着&lt;br&gt;大多数选择的忘记、或许最终发现、是未读的剧情&lt;/p&gt;
    
    </summary>
    
      <category term="奇幻の私" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/"/>
    
      <category term="チュウニキョク" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B%E3%82%AD%E3%83%A7%E3%82%AF/"/>
    
    
      <category term="チュウニ" scheme="http://tashi711.top/tags/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B/"/>
    
  </entry>
  
  <entry>
    <title>奇幻と中二の绝妙タビ</title>
    <link href="http://tashi711.top/maboroshi/maboroshitabi/"/>
    <id>http://tashi711.top/maboroshi/maboroshitabi/</id>
    <published>2020-01-24T04:00:00.000Z</published>
    <updated>2020-02-05T04:52:46.527Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p>「奇幻の私」是自己多年前在QQ空间坚持创作的系列，记录了太多回忆，因为种种原因停更与清空，还好有留下文字记录。如今在这边开始联动空间重开，争取在明年前把东西都搞出来。这个子目录「チュウニキョク（中二曲）」下记录一些有趣的东西，目前暂定的小说也会另起一个子目录。</p><h2 id="两首诗"><a href="#两首诗" class="headerlink" title="两首诗"></a>两首诗</h2><p>这两首诗是自己早些时候瞎写的，如今也很写出当初那种心境了。「神秘的一角」是一个经历过二次创作的作品，很神奇的是，在我第二次改编时，已经忘却了大部分初创时的意图，以至于现在更是模糊了当时很多的创作背景，整首诗大概是记录了许多梦境而生的感慨。「水调歌头·黑婵娟十岁鸣」是自己在杨丞琳十周年时发的新单曲「黑色月亮」时特别有感触，用水调歌头的词式写了下来，内容也基本是联动了歌词。</p><h3 id="神秘的一角"><a href="#神秘的一角" class="headerlink" title="神秘的一角"></a>神秘的一角</h3><p>色彩渐渐褪去，<br>如今，记忆中。</p><p>黑暗中伸手摸索，<br>寻找他人未来。<br>思考，只愿坚强活，<br>追求那份特别。 </p><p>烦恼，难以度过，<br>不会再次迷惘。<br>因为不会放开，<br>彼此受伤。</p><p>一直搜寻答案，<br>迷失在时空中。<br>下个地点时，<br>一意孤行。</p><p>眼中映入，<br>还是感觉得到。<br>那是世界的全部，<br>即使遇见那样的梦。</p><a id="more"></a><p>年幼，<br>满溢于手。<br>水晶般鹅卵，<br>无法看见。</p><p>在宝藏发光的时间，<br>留心一点。<br>可以发现，<br>擦肩而过。</p><p>期待，<br>那没有形体。<br>真的，<br>心中那个神秘。</p><p>到看得见海的街道，<br>只能看见。<br>挑选，串连在一起，<br>延伸任何地方的天空。 </p><p>可是我全都不能再看见，<br>还是到那一意孤行的地方。<br>抓紧，<br>我要成为。</p><p>那不会再次迷惘一般，<br>不会放开。<br>即使受伤，<br>一直搜寻。</p><p>答案迷失在时空中，<br>我继续走进。<br>一意孤行，<br>静静地。</p><p>再次重覆，<br>进入迷惑。<br>我神秘生活，<br>那一角的所有？！</p><h3 id="水调歌头·黑婵娟十岁鸣"><a href="#水调歌头·黑婵娟十岁鸣" class="headerlink" title="水调歌头·黑婵娟十岁鸣"></a>水调歌头·黑婵娟十岁鸣</h3><p>宿饭倒吃罢，<br>夜市不耽亡。<br>侧离过往鳞遍，<br>情又总跌伤。<br>只乃和温尔有，<br>独霸兰予收占，<br>心至地停将。<br>此属痛悲目，<br>视离看石窗。</p><p>黑婵娟，<br>视于暗，<br>莫见光。<br>梦单如梦，<br>风影随月入窗长？<br>欲拜独余谨谅，<br>方使今随日昼，<br>还见过安详。<br>内站且听闭，<br>伤辽月寒光。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h2&gt;&lt;p&gt;「奇幻の私」是自己多年前在QQ空间坚持创作的系列，记录了太多回忆，因为种种原因停更与清空，还好有留下文字记录。如今在这边开始联动空间重开，争取在明年前把东西都搞出来。这个子目录「チュウニキョク（中二曲）」下记录一些有趣的东西，目前暂定的小说也会另起一个子目录。&lt;/p&gt;
&lt;h2 id=&quot;两首诗&quot;&gt;&lt;a href=&quot;#两首诗&quot; class=&quot;headerlink&quot; title=&quot;两首诗&quot;&gt;&lt;/a&gt;两首诗&lt;/h2&gt;&lt;p&gt;这两首诗是自己早些时候瞎写的，如今也很写出当初那种心境了。「神秘的一角」是一个经历过二次创作的作品，很神奇的是，在我第二次改编时，已经忘却了大部分初创时的意图，以至于现在更是模糊了当时很多的创作背景，整首诗大概是记录了许多梦境而生的感慨。「水调歌头·黑婵娟十岁鸣」是自己在杨丞琳十周年时发的新单曲「黑色月亮」时特别有感触，用水调歌头的词式写了下来，内容也基本是联动了歌词。&lt;/p&gt;
&lt;h3 id=&quot;神秘的一角&quot;&gt;&lt;a href=&quot;#神秘的一角&quot; class=&quot;headerlink&quot; title=&quot;神秘的一角&quot;&gt;&lt;/a&gt;神秘的一角&lt;/h3&gt;&lt;p&gt;色彩渐渐褪去，&lt;br&gt;如今，记忆中。&lt;/p&gt;
&lt;p&gt;黑暗中伸手摸索，&lt;br&gt;寻找他人未来。&lt;br&gt;思考，只愿坚强活，&lt;br&gt;追求那份特别。 &lt;/p&gt;
&lt;p&gt;烦恼，难以度过，&lt;br&gt;不会再次迷惘。&lt;br&gt;因为不会放开，&lt;br&gt;彼此受伤。&lt;/p&gt;
&lt;p&gt;一直搜寻答案，&lt;br&gt;迷失在时空中。&lt;br&gt;下个地点时，&lt;br&gt;一意孤行。&lt;/p&gt;
&lt;p&gt;眼中映入，&lt;br&gt;还是感觉得到。&lt;br&gt;那是世界的全部，&lt;br&gt;即使遇见那样的梦。&lt;/p&gt;
    
    </summary>
    
      <category term="奇幻の私" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/"/>
    
      <category term="チュウニキョク" scheme="http://tashi711.top/categories/%E5%A5%87%E5%B9%BB%E3%81%AE%E7%A7%81/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B%E3%82%AD%E3%83%A7%E3%82%AF/"/>
    
    
      <category term="チュウニ" scheme="http://tashi711.top/tags/%E3%83%81%E3%83%A5%E3%82%A6%E3%83%8B/"/>
    
  </entry>
  
  <entry>
    <title>「秦基博 - Rain」</title>
    <link href="http://tashi711.top/nihongo/uta/hatamotohiro-rain/"/>
    <id>http://tashi711.top/nihongo/uta/hatamotohiro-rain/</id>
    <published>2020-01-20T04:00:00.000Z</published>
    <updated>2020-01-20T13:34:09.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌曲信息"><a href="#歌曲信息" class="headerlink" title="歌曲信息"></a>歌曲信息</h2><blockquote><ul><li>歌曲：Rain</li><li>歌手：秦基博（原唱：大江千里）</li><li>作词：大江千里</li><li>作曲：大江千里</li><li>编曲：皆川真人、多田彰文</li><li>专辑：言ノ葉 （2013年5月29日发行）</li></ul></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>这首秦基博的Rain可谓是在我的歌单与学唱列表里反反复复了，作为秦基博最火的一首歌，写这篇文章时才知道这首歌是个翻唱版本，来作为言叶之庭片尾曲。在言叶之庭最后，这首曲子出来的一瞬间，就被感动到了，就像RADWIMPS的歌在君名里那样的感觉。这个春节期间这首歌作为自己的flag开始学，留一首秦基博另一首我也很喜欢的歌向日葵的约定作为毕业前的flag吧。</p><a id="more"></a><h2 id="假名歌词"><a href="#假名歌词" class="headerlink" title="假名歌词"></a>假名歌词</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">言葉（ことば）にできず　凍（こご）えたままで</span><br><span class="line">人前（ひとまえ）ではやさしく生（い）きていた</span><br><span class="line">しわよせで　こんなふうに雑（ざつ）に</span><br><span class="line">雨（あめ）の夜（よる）にきみを　抱（だ）きしめてた</span><br><span class="line"></span><br><span class="line">道路（どうろ）わきのビラと　壊（こわ）れた常夜燈（じょうやとう）</span><br><span class="line">街角（まちかど）ではそうだれもが急（いそ）いでた</span><br><span class="line">きみじゃない　悪（わる）いのは自分（じぶん）の</span><br><span class="line">激（はげ）しさをかくせないぼくのほうさ</span><br><span class="line"></span><br><span class="line">Ladyきみは雨（あめ）にけむる</span><br><span class="line">すいた駅（えき）を少（すこ）し走（はし）った</span><br><span class="line"></span><br><span class="line">どしゃぶりでもかまわないと</span><br><span class="line">ずぶぬれでもかまわないと</span><br><span class="line">しぶきあげるきみが　消（き）えてく</span><br><span class="line"></span><br><span class="line">路地裏（ろじうら）では朝（あさ）が早（はや）いから</span><br><span class="line">今（いま）のうちにきみをつかまえ</span><br><span class="line">行（い）かないで　行（い）かないで　そう言（い）うよ</span><br><span class="line"></span><br><span class="line">別々（べつべつ）に暮（く）らす　泣（な）きだしそうな空（そら）を</span><br><span class="line">にぎりしめる強（つよ）さは今（いま）はもうない</span><br><span class="line">変（か）わらずいる　心（こころ）のすみだけで</span><br><span class="line">傷（きず）つくようなきみならもういらない</span><br><span class="line"></span><br><span class="line">Ladyきみは雨（あめ）にぬれて</span><br><span class="line">ぼくの眼（め）を少（すこ）し見（み）ていた</span><br><span class="line"></span><br><span class="line">どしゃぶりでもかまわないと</span><br><span class="line">ずぶぬれでもかまわないと</span><br><span class="line">口笛（くちぶえ）ふくぼくが　ついてく</span><br><span class="line"></span><br><span class="line">ずいぶんきみを知（し）りすぎたのに</span><br><span class="line">初（はじ）めて争（あらそ）った夜（よる）のように</span><br><span class="line">行（い）かないで　行（い）かないで　そう言（い）うよ</span><br><span class="line"></span><br><span class="line">肩（かた）が乾（かわ）いたシャツ　改札（かいさつ）を出（で）る頃（ころ）</span><br><span class="line">きみの町（まち）じゃもう雨（あめ）は小降（こぶ）りになる</span><br><span class="line">今日（きょう）だけが　明日（あした）に続（つづ）いてる</span><br><span class="line">こんなふうにきみとは終（お）われない</span><br><span class="line"></span><br><span class="line">Ladyきみは今（いま）もこうして</span><br><span class="line">小（ちい）さめの傘（かさ）もささずに</span><br><span class="line"></span><br><span class="line">どしゃぶりでもかまわないと</span><br><span class="line">ずぶぬれでもかまわないと</span><br><span class="line">しぶきあげるきみが消（き）えてく</span><br><span class="line"></span><br><span class="line">路地裏（ろじうら）では朝（あさ）が早（はや）いから</span><br><span class="line">今（いま）のうちにきみをつかまえ</span><br><span class="line">行（い）かないで　行（い）かないで　そう言（い）うよ</span><br><span class="line"></span><br><span class="line">どしゃぶりでもかまわないと</span><br><span class="line">ずぶぬれでもかまわないと</span><br><span class="line">口笛（くちぶえ）ふくぼくが　ついてく</span><br><span class="line"></span><br><span class="line">ずいぶんきみを知（し）りすぎたのに</span><br><span class="line">初（はじ）めて争（あらそ）った夜（よる）のように</span><br><span class="line">行（い）かないで　行（い）かないで　そう言（い）うよ</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;歌曲信息&quot;&gt;&lt;a href=&quot;#歌曲信息&quot; class=&quot;headerlink&quot; title=&quot;歌曲信息&quot;&gt;&lt;/a&gt;歌曲信息&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;歌曲：Rain&lt;/li&gt;
&lt;li&gt;歌手：秦基博（原唱：大江千里）&lt;/li&gt;
&lt;li&gt;作词：大江千里&lt;/li&gt;
&lt;li&gt;作曲：大江千里&lt;/li&gt;
&lt;li&gt;编曲：皆川真人、多田彰文&lt;/li&gt;
&lt;li&gt;专辑：言ノ葉 （2013年5月29日发行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;这首秦基博的Rain可谓是在我的歌单与学唱列表里反反复复了，作为秦基博最火的一首歌，写这篇文章时才知道这首歌是个翻唱版本，来作为言叶之庭片尾曲。在言叶之庭最后，这首曲子出来的一瞬间，就被感动到了，就像RADWIMPS的歌在君名里那样的感觉。这个春节期间这首歌作为自己的flag开始学，留一首秦基博另一首我也很喜欢的歌向日葵的约定作为毕业前的flag吧。&lt;/p&gt;
    
    </summary>
    
      <category term="ニホンゴ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/"/>
    
      <category term="ウタ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/%E3%82%A6%E3%82%BF/"/>
    
    
      <category term="秦基博" scheme="http://tashi711.top/tags/%E7%A7%A6%E5%9F%BA%E5%8D%9A/"/>
    
      <category term="言叶之庭" scheme="http://tashi711.top/tags/%E8%A8%80%E5%8F%B6%E4%B9%8B%E5%BA%AD/"/>
    
  </entry>
  
  <entry>
    <title>秋招小记</title>
    <link href="http://tashi711.top/nichijyou/autumn-recruit/"/>
    <id>http://tashi711.top/nichijyou/autumn-recruit/</id>
    <published>2019-12-22T04:00:00.000Z</published>
    <updated>2019-12-22T17:28:56.894Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p>其实一直想写这篇文章，从找到工作一直拖到现在，终于有空写一写了。</p><p>总的来说今年秋招工作找的蛮辛苦的，前前后后差不多折腾了三个多月。其实到现在也基本不太记得很多细节了，就简单回忆一下还记得事情吧。</p><a id="more"></a><h2 id="国内"><a href="#国内" class="headerlink" title="国内"></a>国内</h2><p>国内互联网公司基本上都是把基础知识问的很细的那种。</p><h3 id="腾讯"><a href="#腾讯" class="headerlink" title="腾讯"></a>腾讯</h3><p>实习的时候腾讯投了微信，视频面了一轮还是两轮忘记了，被拒，然后被互娱捞了起来，视频面了一轮，第二轮用微信发了两道题过来让手写代码，题目比较简单，写好了拍照发过去，隔了几小时面试官跟我讨论写的一些细节，指出了一些错误，然后没有然后了。秋招的时候先投了音乐，很快就接到面试，基本是秋招的第一个面试，但是面试体验极其不好，面试官问了大概几分钟，看我基本回答不出来的样子就挂断了，然后一直处于备胎状态，中间因为隔了太久没回应我也没去查状态了，直到几个月后找工作差不多要结束了，接到了互娱捞的电话才知道前面已经挂掉了，最后也没然后了。总的来说，不同事业部面试的方式千奇百怪，逃不了基础知识，也逃不了算法题。</p><h3 id="字节"><a href="#字节" class="headerlink" title="字节"></a>字节</h3><p>实习一轮游，秋招先投的后端两轮游，后来被移动端捞又一轮游，总的来说，极度考验基础知识，没了。</p><h3 id="阿里"><a href="#阿里" class="headerlink" title="阿里"></a>阿里</h3><p>实习投的C++研发，被钉钉捞了简历，感觉整个面试就是面试官跟我讲人生道理。秋招投同样岗位，很晚的时候被阿里云捞，无果。</p><h3 id="华为"><a href="#华为" class="headerlink" title="华为"></a>华为</h3><p>华为秋招的面试体验应该是最好的，因为部门很多，华为这边正式面试之前好几个部门给我打电话来介绍他们部分问我有没有兴趣，后来正式面试是现场面，当天面到了最后，据说今年都加大了难度，每一轮都要手切代码，中午还蹭了一顿饭，不过后来没有结果了。</p><h3 id="网易"><a href="#网易" class="headerlink" title="网易"></a>网易</h3><p>实习现场面，一面加交叉面被淘汰，我猜是交叉面被刷了，因为简历上写了去新加坡做过nlp，但是做的很水，偏偏面试官也是nlp出身，就把我给问倒了，之后我就在简历上把这一段删掉了。秋招并没有收到通知。</p><h3 id="旷视"><a href="#旷视" class="headerlink" title="旷视"></a>旷视</h3><p>秋招现场面到最后，当天面到最后的都还给了小礼物，据说是为数不多的不加班的国内互联网公司了，后来接到电话说是通过了，但是site在北京，我当时想的是北京有亚马逊了，想argue到上海，hr说要上海那边安排加面，因为当时面我的是北京的部门，后来没有结果了。</p><h3 id="依图"><a href="#依图" class="headerlink" title="依图"></a>依图</h3><p>视频面三轮，题目都是非常基础的做题，面得很顺利，然后说发offer必须现场再聊一轮，后来去现场就稍微的聊的下，最后给了offer，薪资还挺吸引人，但是因为据说加班太严重了，就舍弃掉这个选项了。</p><h3 id="云从"><a href="#云从" class="headerlink" title="云从"></a>云从</h3><p>很奇葩的体验，大概就是面试过了，发offer的那个电话接的让人很不爽，大概就是，问手里有多少offer了，大概给多少，然后说对不起开不了这么高，感觉就是爱接不接的语气。</p><h2 id="外企"><a href="#外企" class="headerlink" title="外企"></a>外企</h2><p>外企基本都是看做算法题的能力。</p><h3 id="微软"><a href="#微软" class="headerlink" title="微软"></a>微软</h3><p>实习找学长内推到上海的本部门，现场3轮面试全是手写代码。也是实习唯一的offer，虽然当时也面的很早，还没面几家，然后毅然的决定去了。然后暑假实习了三个月，各方面都感觉非常好，可惜转正没成功。</p><h3 id="谷歌"><a href="#谷歌" class="headerlink" title="谷歌"></a>谷歌</h3><p>实习和秋招都是一轮游。实习前没刷gcj，感觉吃了点亏，秋招的时候靠gcj拿到面试，感觉hc很少，一轮后隔了很久然后收到拒信。</p><h3 id="微策略"><a href="#微策略" class="headerlink" title="微策略"></a>微策略</h3><p>非常奇怪的秋招经历，唯一一次群面体验，本来感觉还挺不错，也收到了口头offer，但是迟迟收不到正式offer，甚至直到找工作差不多结束了，然后居然收到被拒的邮件，第一次听说还有这种奇葩操作的公司。</p><h3 id="亚马逊"><a href="#亚马逊" class="headerlink" title="亚马逊"></a>亚马逊</h3><p>视频面，之前有两次笔试，问些简单的基础题，很快就发了北京的offer，也是最终决定去的公司，不知道为什么感觉今年招了很多，以前好几年国内亚马逊基本不在我们学校招人。</p><h3 id="freewheel"><a href="#freewheel" class="headerlink" title="freewheel"></a>freewheel</h3><p>听了宣讲会之后先做了一场现场笔试，第二天再现场面试，问的问题都很难，感觉像是招社招的那种，无果。</p><h3 id="hulu"><a href="#hulu" class="headerlink" title="hulu"></a>hulu</h3><p>免了笔试，然后大概在国庆后才安排的面试，发挥的不好，挂掉。</p><h3 id="爱彼迎"><a href="#爱彼迎" class="headerlink" title="爱彼迎"></a>爱彼迎</h3><p>笔试后无消息。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>其他就基本是投了没消息那种，像拼多多通过笔试之后就再也没有后续消息了。总之今年还是不太顺利吧，不过也是如自己所愿进到了外企，但愿在北京的工作顺利吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h2&gt;&lt;p&gt;其实一直想写这篇文章，从找到工作一直拖到现在，终于有空写一写了。&lt;/p&gt;
&lt;p&gt;总的来说今年秋招工作找的蛮辛苦的，前前后后差不多折腾了三个多月。其实到现在也基本不太记得很多细节了，就简单回忆一下还记得事情吧。&lt;/p&gt;
    
    </summary>
    
      <category term="ガクセイジダイのニチジョウ" scheme="http://tashi711.top/categories/%E3%82%AC%E3%82%AF%E3%82%BB%E3%82%A4%E3%82%B8%E3%83%80%E3%82%A4%E3%81%AE%E3%83%8B%E3%83%81%E3%82%B8%E3%83%A7%E3%82%A6/"/>
    
    
      <category term="秋招" scheme="http://tashi711.top/tags/%E7%A7%8B%E6%8B%9B/"/>
    
  </entry>
  
  <entry>
    <title>「Aimer - STAND ALONE」</title>
    <link href="http://tashi711.top/nihongo/uta/aimer-stand-alone/"/>
    <id>http://tashi711.top/nihongo/uta/aimer-stand-alone/</id>
    <published>2019-12-13T04:00:00.000Z</published>
    <updated>2019-12-15T08:41:59.188Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌曲信息"><a href="#歌曲信息" class="headerlink" title="歌曲信息"></a>歌曲信息</h2><blockquote><ul><li>歌曲：STAND ALONE</li><li>歌手：Aimer</li><li>作词：aimerrhythm</li><li>作曲：飞内将大</li><li>专辑：STAND ALONE（2019年5月5日发行）</li></ul></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>轮到你了的主题曲。第二段副歌后面的间奏刚开始有一句关于「六等星の夜」的彩蛋。</p><a id="more"></a><h2 id="假名歌词"><a href="#假名歌词" class="headerlink" title="假名歌词"></a>假名歌词</h2><p>注：本歌词及假名音译参考<a href="https://www.jpmarumaru.com/tw/JPSongPlay-13830.html" target="_blank" rel="noopener">此网站</a>，有改动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">重（かさ）ねた夢（ゆめ）の隙間（すきま）さまよう</span><br><span class="line">今（いま）もまだ　今（いま）もまだ</span><br><span class="line">揺（ゆ）らいだ現実（げんじつ）全（すべ）て捨（す）てて</span><br><span class="line">これはまだ　夢（ゆめ）の中（なか）</span><br><span class="line"></span><br><span class="line">生（なま）ぬるい夜風（よかぜ）と街並（まちな）み</span><br><span class="line">地下鉄（ちかてつ）に　飲（の）み込（こ）まれ</span><br><span class="line">鳴（な）り響（ひび）く雑踏（ざっとう）に溶（と）けて</span><br><span class="line">滲（にじ）む合図（あいず）　ネオンライツ</span><br><span class="line"></span><br><span class="line">さよならって　君（きみ）が叫（さけ）んでる</span><br><span class="line">さよならって　今（いま）も叫（さけ）んでる</span><br><span class="line">間違（まちが）いだらけでも　そのドアを開（あ）ければいいと</span><br><span class="line">何（なに）も変（か）われないなら</span><br><span class="line">悲（かな）しい歌（うた）ずっと　歌（うた）ってもいいの</span><br><span class="line"></span><br><span class="line">Stand-alone　歪（ゆが）んだ世界（せかい）で</span><br><span class="line">Stand-alone　描（えが）いた世界（せかい）へ</span><br><span class="line">バイバイ　窓辺（まどべ）に月明（つきあ）かりも届（とど）かない場所（ばしょ）</span><br><span class="line">何（なに）もかも投（な）げ出（だ）して</span><br><span class="line">暗闇（くらやみ）に浮（う）かぶ　星（ほし）になりたい夜（よる）</span><br><span class="line">そうでしょう</span><br><span class="line"></span><br><span class="line">ふらついた足元（あしもと）指先（ゆびさき）</span><br><span class="line">目（め）の前（まえ）も　吐息（といき）すら</span><br><span class="line">何（なに）もかも本当（ほんとう）か嘘（うそ）か</span><br><span class="line">わからない　わかんない</span><br><span class="line"></span><br><span class="line">探（さが）していたはずの線（せん）を</span><br><span class="line">無（な）くしてきたもので描（えが）いて</span><br><span class="line">曖昧（あいまい）過（す）ぎたのは　始（はじ）まりとルールのせいのう</span><br><span class="line">何（なに）も守（まも）れないなら</span><br><span class="line">刻（きざ）んだ名前（なまえ）も　無（な）くしてもいいよ</span><br><span class="line"></span><br><span class="line">最初（さいしょ）に君（きみ）がついた嘘（うそ）</span><br><span class="line">夜明（よあ）けは来（く）るよと囁（ささや）き</span><br><span class="line">泣（な）きたいほどあの時間（じかん）こそが幸（しあわ）せがあった</span><br><span class="line">星座（せいざ）すら逃（に）げ出（だ）して</span><br><span class="line">一人（ひとり）立（た）ち尽（つ）くす　星（ほし）の見（み）えない夜（よる）</span><br><span class="line"></span><br><span class="line">さよならって　君（きみ）が叫（さけ）んでる</span><br><span class="line">さよならって　今（いま）も叫（さけ）んでる</span><br><span class="line">間違（まちが）いだらけでも　そのドアを叩（たた）けばいいと</span><br><span class="line">何（なに）も変（か）われなくても</span><br><span class="line">悲（かな）しい歌（うた）ずっと　歌（うた）ってもいいと</span><br><span class="line"></span><br><span class="line">Stand-alone　歪（ゆが）んだ世界（せかい）で</span><br><span class="line">Stand-alone　描（えが）いた世界（せかい）へ</span><br><span class="line">バイバイ　窓辺（まどべ）に月明（つきあ）かりも届（とど）かない場所（ばしょ）</span><br><span class="line">何（なに）もかも投（な）げ出（だ）して</span><br><span class="line">暗闇（くらやみ）に浮（う）かぶ　星（ほし）になりたい夜（よる）</span><br><span class="line">そうでしょう</span><br><span class="line">そうでしょう</span><br><span class="line">そうでしょう</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;歌曲信息&quot;&gt;&lt;a href=&quot;#歌曲信息&quot; class=&quot;headerlink&quot; title=&quot;歌曲信息&quot;&gt;&lt;/a&gt;歌曲信息&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;歌曲：STAND ALONE&lt;/li&gt;
&lt;li&gt;歌手：Aimer&lt;/li&gt;
&lt;li&gt;作词：aimerrhythm&lt;/li&gt;
&lt;li&gt;作曲：飞内将大&lt;/li&gt;
&lt;li&gt;专辑：STAND ALONE（2019年5月5日发行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;轮到你了的主题曲。第二段副歌后面的间奏刚开始有一句关于「六等星の夜」的彩蛋。&lt;/p&gt;
    
    </summary>
    
      <category term="ニホンゴ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/"/>
    
      <category term="ウタ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/%E3%82%A6%E3%82%BF/"/>
    
    
      <category term="Aimer" scheme="http://tashi711.top/tags/Aimer/"/>
    
      <category term="轮到你了" scheme="http://tashi711.top/tags/%E8%BD%AE%E5%88%B0%E4%BD%A0%E4%BA%86/"/>
    
  </entry>
  
  <entry>
    <title>双十一开箱记</title>
    <link href="http://tashi711.top/nichijyou/double11/"/>
    <id>http://tashi711.top/nichijyou/double11/</id>
    <published>2019-12-12T04:00:00.000Z</published>
    <updated>2019-12-15T08:48:14.399Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前记"><a href="#前记" class="headerlink" title="前记"></a>前记</h2><p><del>之前写了一篇日记之后觉得想hidden掉了，这篇暂时最为新的开篇吧。</del></p><p>准备写一个双十一相关的，觉得蛮有趣的，但既不是测评也不是推荐，只是记录一下。这篇文章按照开箱的时候来写，当然还是先分类。这篇文章可能跨度很长，因为还有一个目的就是想实际计算一下双十一真的能够省多少钱，于是我打算以双十二为基准，用双十二的价格作为这些商品的年度平均销售价格，为什么这么设定其实也是考虑了很久，一是时间跨度，收货要收很久，所以双十二可能是个最近正好的时间，太远了写这篇文章就太累了。另外就是为什么要选有折扣的，因为肯定不能直接跟原价比，毕竟不在双十一买的东西平时可能也会有各种各样的打折，而且与双十二满300减30的购物津贴一样力度的活动天猫每年还是有好几趟，所以用双十二作为标杆应该算是恰好的。</p><p>可以看得出来我这边主要是针对天猫的，为什们不选择其他电商的，因为确实也没去了解过，逛一边的活动其实给搞清楚应该也差不多了能买的都能买了，其他平台除了买电子产品去京东和买书去当当（有时也去京东）之外基本没逛过，而且要说正品率，我记得什么地方看到过一个测评，天猫旗舰店的正品率相比于其他电商的旗舰店（比如京东自营）来说是最高的。另外其他电商真的有天猫做得好吗，举个例子，这次双十一我看中一款鞋，在天猫上6种配色齐的，在京东上只看到3种，还贵100多，虽然比较的不多，但随意抽样了一个就足以说明很多东西了（毕竟作为男孩子买鞋不是天经地义）。</p><h2 id="一些想法"><a href="#一些想法" class="headerlink" title="一些想法"></a>一些想法</h2><p>从第一届双十一开始我参加了，买的东西应该是一年比一年多，还记得最开始一两年，红包都是三位数的拿（就是那种无差别红包直接抵现的），现在红包最多两位数还要很辛苦的去玩各种东西才有，像今年盖楼，每天玩，盖到50级，18块的红包加3块抽奖加支付宝3块金手指，当然满400减50还是真香。当然对双十一还是有很多执念的，比如说买一大堆平时没吃过的零食，囤过冬用的东西，以及每次双十一其实都是我每年学习护肤品相关知识的时候。双十一真正能够薅的，还是有很多很多的，比如一般来说至少持平全年最低的定价，津贴约等于再打个9折，以及很多护肤品都是以送很多小样能达到均价格比代购还便宜。关于双十一在各平台各种说法真的很多很多，当然不同人有不同人看法，但是就我而言，看到的更多是比较酸的心态吧，就说其实根本便宜不了多少，可能还会涨价什么的，我其实觉得那些人很多都是都是没有花功夫去稍微做点功课的人吧，毕竟无论什么事总是要稍微花点功夫的（目前来看天猫也是这么想的，增加了学习难度，要么足够有钱，要么舍得花时间研究，不管是啥哪有那么好白嫖的），那么究竟香不香，有多香，可以期待下我这篇文章的结果吧。</p><a id="more"></a><h2 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h2><p>我这次主要买的东西分成以下3类：护肤品（包括个户）、食品、其他。价格都是实际付的价格（算上津贴的折扣了）。</p><h3 id="护肤品（包括个户）"><a href="#护肤品（包括个户）" class="headerlink" title="护肤品（包括个户）"></a>护肤品（包括个户）</h3><p>主要是眼霜、化妆棉、洗脸巾、磨砂膏、水杨酸等等还有一些杂七杂八的东西。</p><h4 id="1、兰蔻小黑瓶眼霜"><a href="#1、兰蔻小黑瓶眼霜" class="headerlink" title="1、兰蔻小黑瓶眼霜"></a>1、<a href="https://detail.tmall.com/item.htm?id=567015266775&amp;spm=a1z09.2.0.0.19692e8dXTXfID&amp;skuId=3617729268437" target="_blank" rel="noopener">兰蔻小黑瓶眼霜</a></h4><p>兰蔻没有津贴，没有价格折扣，就是买一送一（当然送的是等量小样），不过按5折算也是比代购便宜的价格，今年自己就想买个大牌眼霜试试，雅诗兰黛今年拉胯，直接没有往年的买一送一，因此兰蔻变成我唯一的选择。小黑瓶也挺出名的，毕竟也是双十一明星产品，开箱后发现还是双十一的专门包装，很精致，也是今年到的最快的（中午之前）。</p><p>使用之后感觉还不错，比之前用的skii感觉舒服，至少没有辣眼睛的感觉了。</p><p>入手价：520.00（买一送一）<br>对比价：520.00（并没有买一送一了，送的都是面膜这样的赠品）</p><h4 id="2、棉森束发带"><a href="#2、棉森束发带" class="headerlink" title="2、棉森束发带"></a>2、<a href="https://detail.tmall.com/item.htm?id=582885277883&amp;spm=a1z09.2.0.0.75532e8dbwitzm&amp;_u=c1k9komfff18" target="_blank" rel="noopener">棉森束发带</a></h4><p>最近有留长头发的取向，抹护肤品的时候老是粘头发上，吹又吹不干，买个发带试试。</p><p>用起来特别舒服，尤其最近留长发，特别适用。</p><p>入手价：15.75<br>对比价：22.00</p><h4 id="3、棉森化妆棉4盒"><a href="#3、棉森化妆棉4盒" class="headerlink" title="3、棉森化妆棉4盒"></a>3、<a href="https://detail.tmall.com/item.htm?id=560211735595&amp;spm=a1z09.2.0.0.75532e8dbwitzm&amp;_u=c1k9komf1b36" target="_blank" rel="noopener">棉森化妆棉4盒</a></h4><p>一个follow的护肤up主推荐的，以前都是用尤妮佳，换个口味试试。</p><p>入手价：34.50<br>对比价：49.00</p><h4 id="4、Dove磨砂膏"><a href="#4、Dove磨砂膏" class="headerlink" title="4、Dove磨砂膏"></a>4、<a href="https://detail.tmall.com/item.htm?id=602450867261&amp;spm=a1z09.2.0.0.75532e8dCuPaie" target="_blank" rel="noopener">Dove磨砂膏</a></h4><p>每年必备一罐，去年买的oh baby，感觉很好用，这个也是那个up主推荐的。</p><p>我觉得女孩子会喜欢，香味实在是太浓了，不过使用感还是非常棒的。</p><p>入手价：88.57（看到宣传是领券可以减到69，不知道怎么做到的）<br>对比价：99.00</p><h4 id="5、宝拉水杨酸"><a href="#5、宝拉水杨酸" class="headerlink" title="5、宝拉水杨酸"></a>5、<a href="https://detail.tmall.com/item.htm?id=35073674546&amp;spm=a1z09.2.0.0.75532e8dCuPaie" target="_blank" rel="noopener">宝拉水杨酸</a></h4><p>去黑头的明星产品了，以前用过，去年换了下杏仁酸发现效果并不是很好，所以换回水杨酸试试。</p><p>使用起来非常舒服，比起Dr. Wu简直不要好用太多。</p><p>入手价：135.15（30ml×2）<br>对比价：这个很尴尬，在双十二的时候就没有两瓶这个选项了，我当双十一是买一送一好了，用单品价格比较：159.00</p><h4 id="6、自动牙刷刷头3支×2"><a href="#6、自动牙刷刷头3支×2" class="headerlink" title="6、自动牙刷刷头3支×2"></a>6、<a href="https://detail.tmall.com/item.htm?id=44005916004&amp;spm=a1z09.2.0.0.79e22e8dTnoDbx&amp;_u=c1k9komf3d63" target="_blank" rel="noopener">自动牙刷刷头3支×2</a></h4><p>每年双十一必备啦，自从开始用自动牙刷，这个都要买的，只不过最近一年刚换的飞利浦，所以这边这个数量很尴尬，每套3支，而3个月需要换一次所以每年需要4支，所以这次就先买了两套。个人觉得自动牙刷还是很好的东西，oral-b入门（刷头每套4支买起来也很方便）然后转飞利浦入门款（以前寝室4个人有3个用这一款）。</p><p>使用感就不用多提了，老样子。</p><p>入手价：112.96×2<br>对比价：159.00×2</p><h4 id="7、佑天兰面膜9片套装"><a href="#7、佑天兰面膜9片套装" class="headerlink" title="7、佑天兰面膜9片套装"></a>7、<a href="https://detail.tmall.com/item.htm?id=567942639726&amp;spm=a1z09.2.0.0.75532e8dL8tiGb" target="_blank" rel="noopener">佑天兰面膜9片套装</a></h4><p>本人其实基本没有敷过面膜，主要还是这个up主推荐的，尝试一下。</p><p>用起来非常舒服，强烈安利。</p><p>入手价：101.99（还多送了一片）<br>对比价：150.00 - 25.00</p><h4 id="8、OLAY超A瓶精华Prox"><a href="#8、OLAY超A瓶精华Prox" class="headerlink" title="8、OLAY超A瓶精华Prox"></a>8、<a href="https://detail.tmall.com/item.htm?id=596789081360&amp;spm=a1z09.2.0.0.75532e8dL8tiGb&amp;skuId=4322536387699" target="_blank" rel="noopener">OLAY超A瓶精华Prox</a></h4><p>一直想试的，据测评这个成分抗老作用非常好，而且olay也是自己非常喜欢的牌子，他家的东西用过很多，每年都有买，去年是光感。跟兰蔻差不多，olay也基本都是通过送小样来买一送一的。</p><p>用起来是OLAY产品的一罐舒适感。</p><p>入手价：289.35（买一送一）<br>对比价：369.00（买一送一）</p><h4 id="9、棉森洗脸巾"><a href="#9、棉森洗脸巾" class="headerlink" title="9、棉森洗脸巾"></a>9、<a href="https://detail.tmall.com/item.htm?id=560192263041&amp;spm=a1z09.2.0.0.75532e8dC8FpOS" target="_blank" rel="noopener">棉森洗脸巾</a></h4><p>从来没用过洗脸巾，经过多方安利，今年试一下。</p><p>用了几次没用了，使用感还行，就是自己太懒了。</p><p>入手价：52.79<br>对比价：79.00</p><h4 id="10、安耐晒金瓶"><a href="#10、安耐晒金瓶" class="headerlink" title="10、安耐晒金瓶"></a>10、<a href="https://detail.tmall.com/item.htm?id=521027319777&amp;spm=a1z09.2.0.0.75532e8dC8FpOS&amp;skuId=3104831498572" target="_blank" rel="noopener">安耐晒金瓶</a></h4><p>明星产品，还没用过，试一下。</p><p>用了之后发现还不错，不会很厚重油腻，比较清爽。</p><p>入手价：198.00（也是没有津贴优惠）<br>对比价：248.00</p><h4 id="11、飞科鼻毛修剪器"><a href="#11、飞科鼻毛修剪器" class="headerlink" title="11、飞科鼻毛修剪器"></a>11、<a href="https://detail.tmall.com/item.htm?id=13102125483&amp;spm=a1z09.2.0.0.35342e8d9lqivr&amp;_u=h1k9komfbdbb" target="_blank" rel="noopener">飞科鼻毛修剪器</a></h4><p>第一次买这种东西，最近被小伙伴吐槽过一次然后就，试下水。</p><p>很好用，只是不能剃太干净，不然跟剃其他部位毛一样高会感觉还很刺。</p><p>入手价：27.00（第二天补买的没有用津贴）<br>对比价：27.00</p><h4 id="12、OLAY淡斑小白瓶"><a href="#12、OLAY淡斑小白瓶" class="headerlink" title="12、OLAY淡斑小白瓶"></a>12、<a href="https://detail.tmall.com/item.htm?id=16989611811&amp;spm=a1z09.2.0.0.75532e8d5llglN" target="_blank" rel="noopener">OLAY淡斑小白瓶</a></h4><p>也是一直想尝试的，跟olay的另一个居然收货时间相隔很多。</p><p>评价跟超A瓶一样，两个一般一起用。</p><p>入手价：289.35（买一送一）<br>对比价：369.00（没有买一送一，送的都是大概一半价格的面膜）</p><h4 id="13、松下冲牙器"><a href="#13、松下冲牙器" class="headerlink" title="13、松下冲牙器"></a>13、<a href="https://detail.tmall.com/item.htm?id=40256671435&amp;spm=a1z09.2.0.0.217a2e8ddzjrxC&amp;_u=k1k9komf6896" target="_blank" rel="noopener">松下冲牙器</a></h4><p>据说是大部分时间能替代牙线的存在，尝试一下。</p><p>偶尔想起来会用一次，感觉没有自动牙刷所带来的那种惊艳感吧。</p><p>入手价：308.72（加1块钱送两个刷头）<br>对比价：499.00 - 70.00</p><h4 id="14、多芬沐浴液400ml×3"><a href="#14、多芬沐浴液400ml×3" class="headerlink" title="14、多芬沐浴液400ml×3"></a>14、<a href="https://detail.tmall.com/item.htm?id=573311861642&amp;spm=a1z09.2.0.0.75532e8dJfoZwA" target="_blank" rel="noopener">多芬沐浴液400ml×3</a></h4><p>每年都要囤一点。</p><p>入手价：89.38<br>对比价：99.90</p><h4 id="15、Ora2牙膏"><a href="#15、Ora2牙膏" class="headerlink" title="15、Ora2牙膏"></a>15、<a href="https://detail.tmall.com/item.htm?id=41861690460&amp;spm=a1z09.2.0.0.75532e8dJfoZwA&amp;skuId=4226915024864" target="_blank" rel="noopener">Ora2牙膏</a></h4><p>每年都要囤的，要么就是狮王，要么就是这个了，还送了一只小的。</p><p>入手价：64.48<br>对比价：85.00</p><h4 id="16、Ora2口气清新剂4小支"><a href="#16、Ora2口气清新剂4小支" class="headerlink" title="16、Ora2口气清新剂4小支"></a>16、<a href="https://detail.tmall.com/item.htm?id=557243073460&amp;spm=a1z09.2.0.0.75532e8dJfoZwA" target="_blank" rel="noopener">Ora2口气清新剂4小支</a></h4><p>买牙膏的时候看到的，没用过，第一次尝试用一下。</p><p>感觉还不错，试了一瓶。</p><p>入手价：58.46<br>对比价：78.00</p><h3 id="食品"><a href="#食品" class="headerlink" title="食品"></a>食品</h3><p>主要是一堆自热火锅，还有一些奇奇怪怪尝鲜的东西。</p><h4 id="1、RIO本榨系列6罐"><a href="#1、RIO本榨系列6罐" class="headerlink" title="1、RIO本榨系列6罐"></a>1、<a href="https://detail.tmall.com/item.htm?id=550921015622&amp;spm=a1z09.2.0.0.75532e8dHQyE4V&amp;_u=c1k9komfc5ac" target="_blank" rel="noopener">RIO本榨系列6罐</a></h4><p>没有喝过的系列。</p><p>芒果味不好喝，另外两种超级好喝。</p><p>入手价：37.46<br>对比价：52.00</p><h4 id="2、香辣蟹（鲜食）"><a href="#2、香辣蟹（鲜食）" class="headerlink" title="2、香辣蟹（鲜食）"></a>2、<a href="https://detail.tmall.com/item.htm?id=572264220923&amp;spm=a1z09.2.0.0.75532e8dbwitzm&amp;_u=c1k9komf648b" target="_blank" rel="noopener">香辣蟹（鲜食）</a></h4><p>第一次买这种吃，对蟹黄的执念吧，感觉刚收到的时候很惊喜呀，都是泡沫裹好里面有冰袋的。当然有个缺点就是，必须马上吃掉。</p><p>腥味比较大，只能说一般般</p><p>入手价：43.07<br>对比价：48.80</p><h4 id="3、海底捞韩式泡菜味自热火锅"><a href="#3、海底捞韩式泡菜味自热火锅" class="headerlink" title="3、海底捞韩式泡菜味自热火锅"></a>3、<a href="https://detail.tmall.com/item.htm?id=599479540013&amp;spm=a1z09.2.0.0.75532e8dCuPaie&amp;_u=c1k9komf7721" target="_blank" rel="noopener">海底捞韩式泡菜味自热火锅</a></h4><p>没吃过的口味。</p><p>感觉还不错，可回购类型。</p><p>入手价：27.90<br>对比价：36.90</p><h4 id="4、海底捞咖喱牛肉自热米饭"><a href="#4、海底捞咖喱牛肉自热米饭" class="headerlink" title="4、海底捞咖喱牛肉自热米饭"></a>4、<a href="https://detail.tmall.com/item.htm?id=590036081840&amp;spm=a1z09.2.0.0.75532e8dCuPaie&amp;_u=c1k9komfb1f7" target="_blank" rel="noopener">海底捞咖喱牛肉自热米饭</a></h4><p>也是没吃过的口味，而且其实也没吃过海底捞的自热饭。</p><p>有点鸡肋的自热饭类型，不会回购。</p><p>入手价：23.80<br>对比价：29.90</p><h4 id="5、香辣扇贝（鲜食）"><a href="#5、香辣扇贝（鲜食）" class="headerlink" title="5、香辣扇贝（鲜食）"></a>5、<a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.75532e8dL8tiGb&amp;id=575948225386&amp;_u=e1k9komf5044" target="_blank" rel="noopener">香辣扇贝（鲜食）</a></h4><p>跟香辣蟹一样，冷藏送来的，也是必须要马上吃掉。</p><p>味道差强人意。</p><p>入手价：17.80<br>对比价：17.80</p><h4 id="6、香辣虾（鲜食）"><a href="#6、香辣虾（鲜食）" class="headerlink" title="6、香辣虾（鲜食）"></a>6、<a href="https://item.taobao.com/item.htm?spm=a1z09.2.0.0.75532e8dL8tiGb&amp;id=16284986860&amp;_u=e1k9komf79eb" target="_blank" rel="noopener">香辣虾（鲜食）</a></h4><p>同上。这两个东西貌似都不算津贴的，而且在我写这个的时候（14号）价格居然没变，不过看在只买这么点还包邮的份上也算是稍微有点优惠（平时好像要3份才包邮还是8块钱邮费）？</p><p>跟上面一样差强人意。</p><p>入手价：16.80<br>对比价：16.80</p><h4 id="7、统一自热火锅4桶"><a href="#7、统一自热火锅4桶" class="headerlink" title="7、统一自热火锅4桶"></a>7、<a href="https://detail.tmall.com/item.htm?id=604830452088&amp;spm=a1z09.2.0.0.75532e8dC8FpOS" target="_blank" rel="noopener">统一自热火锅4桶</a></h4><p>因为有冬荫功味道比较感兴趣拍下的。</p><p>这两个味道都非常好吃，而且这个价格也太良心了，</p><p>入手价：72.25<br>对比价：下架了，按照目前的价格59.9*2算吧。</p><h4 id="8、零食礼包2小箱"><a href="#8、零食礼包2小箱" class="headerlink" title="8、零食礼包2小箱"></a>8、<a href="https://detail.tmall.com/item.htm?id=543441102207&amp;spm=a1z09.2.0.0.75532e8dC8FpOS" target="_blank" rel="noopener">零食礼包2小箱</a></h4><p>随意挑的一款，感觉挑了好几款就这个里面的东西喜欢率最高了，虽然说是买一送一，但看平时也是两箱一起卖的</p><p>还没吃完，辣的还不错，有些喜欢有些不喜欢。</p><p>入手价：47.24<br>对比价：69.80</p><h4 id="9、拉面说自热烤面"><a href="#9、拉面说自热烤面" class="headerlink" title="9、拉面说自热烤面"></a>9、<a href="https://detail.tmall.com/item.htm?id=602549711200&amp;spm=a1z09.2.0.0.75532e8dtjYG7J&amp;_u=f1k9komf22d7&amp;skuId=4213502628365" target="_blank" rel="noopener">拉面说自热烤面</a></h4><p>好像一直给我推拉面说的东西，就下单了一个这个试试。</p><p>感觉还不错。</p><p>入手价：21.77<br>对比价：25.90</p><h4 id="10、两包调料"><a href="#10、两包调料" class="headerlink" title="10、两包调料"></a>10、<a href="https://detail.tmall.com/item.htm?id=602139674853&amp;spm=a1z09.2.0.0.75532e8dtjYG7J" target="_blank" rel="noopener">两包调料</a></h4><p>这个其实是买错的，一开始以为是自热的，后来下完单才发现是调料，而且是付定金的那种，就干脆买下来了准备过年带回去，反正也不贵，懒得退了。</p><p>入手价：25.50<br>对比价：68.00</p><h4 id="11、自热米饭4盒"><a href="#11、自热米饭4盒" class="headerlink" title="11、自热米饭4盒"></a>11、<a href="https://detail.tmall.com/item.htm?id=604316843335&amp;spm=a1z09.2.0.0.75532e8d5llglN" target="_blank" rel="noopener">自热米饭4盒</a></h4><p>本来是想买自热白米饭去配自热火锅的，突然发现带料的饭也贵不了多少，就买了这个。</p><p>感觉反正只看饭还不错，配菜真的质量比较差。</p><p>入手价：43.84<br>对比价：69.00</p><h4 id="12、自热粥6盒"><a href="#12、自热粥6盒" class="headerlink" title="12、自热粥6盒"></a>12、<a href="https://detail.tmall.com/item.htm?id=586170527065&amp;spm=a1z09.2.0.0.75532e8d5llglN" target="_blank" rel="noopener">自热粥6盒</a></h4><p>第一次尝试这种。</p><p>本系列购买最雷品，难吃，主要是煮热之后会散发出一股让人恶心的骚臭味。</p><p>入手价：37.49<br>对比价：62.90</p><h4 id="13、自热汤7盒"><a href="#13、自热汤7盒" class="headerlink" title="13、自热汤7盒"></a>13、<a href="https://detail.tmall.com/item.htm?id=583841368499&amp;spm=a1z09.2.0.0.75532e8d5llglN" target="_blank" rel="noopener">自热汤7盒</a></h4><p>同上，一个厂家的，还一个包裹送过来，13盒一起拿，超级重。</p><p>一样雷品，稍微好一点点，能吃的下去，但是里面的肉都是干柴到完全不能嚼。</p><p>入手价：67.47<br>对比价：94.00</p><h4 id="14、自热海鲜火锅"><a href="#14、自热海鲜火锅" class="headerlink" title="14、自热海鲜火锅"></a>14、<a href="https://detail.tmall.com/item.htm?id=572139099954&amp;spm=a1z09.2.0.0.75532e8dl7SICy" target="_blank" rel="noopener">自热海鲜火锅</a></h4><p>这个居然是按生鲜标准寄过来的，有点惊讶，就是泡沫里面用并冷藏的那种，而且貌似还有个赠品鱿鱼，也是用另外一个单独包装的生鲜标准寄过来的，实属良心。</p><p>总体感觉还行，至少不难吃，口味比较重，应该不会回购。</p><p>入手价：60.17<br>对比价：89.80</p><h4 id="15、自嗨锅3桶"><a href="#15、自嗨锅3桶" class="headerlink" title="15、自嗨锅3桶"></a>15、<a href="https://detail.tmall.com/item.htm?id=604756383909&amp;spm=a1z09.2.0.0.75532e8dJfoZwA" target="_blank" rel="noopener">自嗨锅3桶</a></h4><p>几种新口味尝鲜。</p><p>都挺不错的。</p><p>入手价：53.59<br>对比价：（168的下架的价格，懒得计算每一桶了，按入手价估计吧）</p><h4 id="16、自热烤鱼2盒"><a href="#16、自热烤鱼2盒" class="headerlink" title="16、自热烤鱼2盒"></a>16、<a href="https://detail.tmall.com/item.htm?id=604236870674&amp;spm=a1z09.2.0.0.75532e8dJfoZwA" target="_blank" rel="noopener">自热烤鱼2盒</a></h4><p>尝鲜。</p><p>讲道理不好吃，鱼肉难挑、刺多还咸，还不如吃底料。</p><p>入手价：37.20<br>对比价：下架，考虑单份29.90×2</p><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>就除了上面两类之外其他也没啥东西了。</p><h4 id="1、001"><a href="#1、001" class="headerlink" title="1、001"></a>1、<a href="https://detail.tmall.hk/hk/item.htm?tbpm=1&amp;spm=a1z09.2.0.0.75532e8dC8FpOS&amp;id=576981089663" target="_blank" rel="noopener">001</a></h4><p>一直想体验传说中的001了。</p><p>用过感觉真的很棒。</p><p>入手价：113.05（看了下是有88会员的95折但是没有津贴优惠）<br>对比价：149.00</p><h4 id="2、袜子5双"><a href="#2、袜子5双" class="headerlink" title="2、袜子5双"></a>2、<a href="https://detail.tmall.com/item.htm?id=583021038052&amp;spm=a1z09.2.0.0.35342e8d9lqivr&amp;_u=h1k9komfd2aa&amp;sku_properties=20509:28383" target="_blank" rel="noopener">袜子5双</a></h4><p>在推荐里面看到的，感觉样式还行，不管劣不劣质，反正便宜。</p><p>感觉还行，看起来是土味的但是穿上好看。</p><p>入手价：15.20（第二天补买的没有用津贴）<br>对比价：17.90</p><h4 id="3、耐克护腕"><a href="#3、耐克护腕" class="headerlink" title="3、耐克护腕"></a>3、<a href="https://detail.tmall.com/item.htm?id=19301362938&amp;spm=a1z09.2.0.0.35342e8d9lqivr&amp;_u=h1k9komff807" target="_blank" rel="noopener">耐克护腕</a></h4><p>做keep的时候手腕痛的不行，买一个来试下水。</p><p>说来惭愧，买来还没带上做一次运动。</p><p>入手价：49.00（这个价格挺搞的，总之当时最低可能用39买到，没抢到券）<br>对比价：79.00</p><h4 id="4、维达餐巾纸18包"><a href="#4、维达餐巾纸18包" class="headerlink" title="4、维达餐巾纸18包"></a>4、<a href="https://detail.tmall.com/item.htm?id=603692093528&amp;spm=a1z09.2.0.0.75532e8dJfoZwA" target="_blank" rel="noopener">维达餐巾纸18包</a></h4><p>大概能用到毕业？</p><p>熟悉的感觉，熟悉的配方</p><p>入手价：41.96<br>对比价：56.90 </p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>入手总价：3,352.15‬<br>对比总价：4,293.49‬<br>总共省：941.34，去掉津贴300还有641.34，占15%左右。</p><p>此外，还有很多买一送一，比如兰蔻眼霜，olay精华、宝拉水杨酸之类的没算进去，总的来说优惠是肉眼可见有的。</p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>绝大部分“正常”店铺的“正常”商品在双十一买应该是绝对没毛病的。在力所能及的范围内适当囤货没什么问题，长远的说绝对是划算的，其实双十一也是一个能够提升生活品质的机会，每年稍稍参与一下，让自己慢慢过得精致起来也蛮不错的。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前记&quot;&gt;&lt;a href=&quot;#前记&quot; class=&quot;headerlink&quot; title=&quot;前记&quot;&gt;&lt;/a&gt;前记&lt;/h2&gt;&lt;p&gt;&lt;del&gt;之前写了一篇日记之后觉得想hidden掉了，这篇暂时最为新的开篇吧。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;准备写一个双十一相关的，觉得蛮有趣的，但既不是测评也不是推荐，只是记录一下。这篇文章按照开箱的时候来写，当然还是先分类。这篇文章可能跨度很长，因为还有一个目的就是想实际计算一下双十一真的能够省多少钱，于是我打算以双十二为基准，用双十二的价格作为这些商品的年度平均销售价格，为什么这么设定其实也是考虑了很久，一是时间跨度，收货要收很久，所以双十二可能是个最近正好的时间，太远了写这篇文章就太累了。另外就是为什么要选有折扣的，因为肯定不能直接跟原价比，毕竟不在双十一买的东西平时可能也会有各种各样的打折，而且与双十二满300减30的购物津贴一样力度的活动天猫每年还是有好几趟，所以用双十二作为标杆应该算是恰好的。&lt;/p&gt;
&lt;p&gt;可以看得出来我这边主要是针对天猫的，为什们不选择其他电商的，因为确实也没去了解过，逛一边的活动其实给搞清楚应该也差不多了能买的都能买了，其他平台除了买电子产品去京东和买书去当当（有时也去京东）之外基本没逛过，而且要说正品率，我记得什么地方看到过一个测评，天猫旗舰店的正品率相比于其他电商的旗舰店（比如京东自营）来说是最高的。另外其他电商真的有天猫做得好吗，举个例子，这次双十一我看中一款鞋，在天猫上6种配色齐的，在京东上只看到3种，还贵100多，虽然比较的不多，但随意抽样了一个就足以说明很多东西了（毕竟作为男孩子买鞋不是天经地义）。&lt;/p&gt;
&lt;h2 id=&quot;一些想法&quot;&gt;&lt;a href=&quot;#一些想法&quot; class=&quot;headerlink&quot; title=&quot;一些想法&quot;&gt;&lt;/a&gt;一些想法&lt;/h2&gt;&lt;p&gt;从第一届双十一开始我参加了，买的东西应该是一年比一年多，还记得最开始一两年，红包都是三位数的拿（就是那种无差别红包直接抵现的），现在红包最多两位数还要很辛苦的去玩各种东西才有，像今年盖楼，每天玩，盖到50级，18块的红包加3块抽奖加支付宝3块金手指，当然满400减50还是真香。当然对双十一还是有很多执念的，比如说买一大堆平时没吃过的零食，囤过冬用的东西，以及每次双十一其实都是我每年学习护肤品相关知识的时候。双十一真正能够薅的，还是有很多很多的，比如一般来说至少持平全年最低的定价，津贴约等于再打个9折，以及很多护肤品都是以送很多小样能达到均价格比代购还便宜。关于双十一在各平台各种说法真的很多很多，当然不同人有不同人看法，但是就我而言，看到的更多是比较酸的心态吧，就说其实根本便宜不了多少，可能还会涨价什么的，我其实觉得那些人很多都是都是没有花功夫去稍微做点功课的人吧，毕竟无论什么事总是要稍微花点功夫的（目前来看天猫也是这么想的，增加了学习难度，要么足够有钱，要么舍得花时间研究，不管是啥哪有那么好白嫖的），那么究竟香不香，有多香，可以期待下我这篇文章的结果吧。&lt;/p&gt;
    
    </summary>
    
      <category term="ガクセイジダイのニチジョウ" scheme="http://tashi711.top/categories/%E3%82%AC%E3%82%AF%E3%82%BB%E3%82%A4%E3%82%B8%E3%83%80%E3%82%A4%E3%81%AE%E3%83%8B%E3%83%81%E3%82%B8%E3%83%A7%E3%82%A6/"/>
    
    
      <category term="双十一" scheme="http://tashi711.top/tags/%E5%8F%8C%E5%8D%81%E4%B8%80/"/>
    
  </entry>
  
  <entry>
    <title>「RADWIMPS - 愛にできることはまだあるかい」</title>
    <link href="http://tashi711.top/nihongo/uta/ainidekirukotohamadaarukai/"/>
    <id>http://tashi711.top/nihongo/uta/ainidekirukotohamadaarukai/</id>
    <published>2019-11-05T04:00:00.000Z</published>
    <updated>2019-11-05T13:50:09.851Z</updated>
    
    <content type="html"><![CDATA[<h2 id="歌曲信息"><a href="#歌曲信息" class="headerlink" title="歌曲信息"></a>歌曲信息</h2><blockquote><ul><li>歌曲：愛にできることはまだあるかい</li><li>歌手：RADWIMPS</li><li>作词：野田洋次郎</li><li>作曲：野田洋次郎</li><li>专辑：天気の子（2019年7月19日发行）</li></ul></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>天气之子的主题曲，在大陆上映之前一个多月就出了，超级喜欢的歌，让好久没翻唱日语歌的我忍不住学了。这首歌难的地方就是歌词，两大段不同的歌词很难记，也是学了一个月左右，在上映前几天学的差不多，看电影时跟着就唱出来了。去看了电影再看看这首歌的MV，真的会很有感触。</p><a id="more"></a><h2 id="假名歌词"><a href="#假名歌词" class="headerlink" title="假名歌词"></a>假名歌词</h2><p>注：本歌词及假名音译参考<a href="https://www.jpmarumaru.com/tw/JPSongPlay-14149.html" target="_blank" rel="noopener">此网站</a>，有改动。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">愛（あい）にできることはまだあるかい</span><br><span class="line"></span><br><span class="line">何（なに）も持（も）たずに　生（う）まれ落（お）ちた僕（ぼく）</span><br><span class="line">永遠（とわ）の隙間（すきま）で　のたうち回（まわ）ってる</span><br><span class="line">諦（あきら）めたものと　賢（かしこ）いものだけが</span><br><span class="line">勝者（しょうしゃ）の時代（じだい）に　何処（どこ）で息（いき）を吸（す）う</span><br><span class="line"></span><br><span class="line">支配者（しはいしゃ）も神（かみ）も　何処（どこ）か他人（たにん）顔（がお）</span><br><span class="line">だけど本当（ほんとう）は　分（わ）かってるはず</span><br><span class="line">勇気（ゆうき）や希望（きぼう）や　絆（きずな）とかの魔法（まほう）</span><br><span class="line">使（つか）い道（みち）もなく　大人（おとな）は目（め）を背（そむ）ける</span><br><span class="line">それでもあの日（ひ）の　君（きみ）が今（いま）もまだ</span><br><span class="line">僕（ぼく）の全（ぜん）正義（せいぎ）の　ど真（ま）ん中（なか）にいる</span><br><span class="line">世界（せかい）が背中（せなか）を　向（む）けてもまだなお</span><br><span class="line">立（た）ち向（む）かう君（きみ）が　今（いま）もここにいる</span><br><span class="line">愛（あい）にできることはまだあるかい</span><br><span class="line">僕（ぼく）にできることはまだあるかい</span><br><span class="line"></span><br><span class="line">君（きみ）がくれた勇気（ゆうき）だから</span><br><span class="line">君（きみ）のために使（つか）いたいんだ</span><br><span class="line">君（きみ）と分（わ）け合（あ）った愛（あい）だから</span><br><span class="line">君（きみ）とじゃなきゃ意味（いみ）がないんだ</span><br><span class="line">愛（あい）にできることはまだあるかい</span><br><span class="line">僕（ぼく）にできることはまだあるかい</span><br><span class="line"></span><br><span class="line">運命（サダメ）とはつまり　サイコロのでた目（め）</span><br><span class="line">はたまた神（かみ）の　いつものきまぐれ</span><br><span class="line">選（えら）び選（えら）ばれた　脱（ぬ）げられぬ鎧（よろい）</span><br><span class="line">もしくは遥（はる）かな　揺（ゆ）らぐことない意志（いし）</span><br><span class="line">果（は）たさぬ願（ねが）いと　叶（かな）わぬ再会（さいかい）と</span><br><span class="line">解（ほど）けぬ誤解（ごかい）と　降（ふ）り積（つ）もる憎悪（ぞうお）と</span><br><span class="line">許（ゆる）し合（あ）う声（こえ）と　握（にぎ）りしめ合（あ）う手（て）を</span><br><span class="line">この星（ほし）は今日（きょう）も　抱（かか）えて生（い）きてる</span><br><span class="line">愛（あい）にできることはまだあるかい</span><br><span class="line">僕（ぼく）にできることはまだあるかい</span><br><span class="line"></span><br><span class="line">君（きみ）がくれた勇気（ゆうき）だから</span><br><span class="line">君（きみ）のために使（つか）いたいんだ</span><br><span class="line">君（きみ）と育（そだ）てた愛（あい）だから</span><br><span class="line">君（きみ）とじゃなきゃ意味（いみ）がないんだ</span><br><span class="line">愛（あい）にできることはまだあるかい</span><br><span class="line">僕（ぼく）にできることはまだあるかい</span><br><span class="line"></span><br><span class="line">何（なに）もない僕（ぼく）たちに　なぜ夢（ゆめ）を見（み）させたか</span><br><span class="line">終（お）わりある人生（じんせい）に　なぜ希望（きぼう）を持（も）たせたか</span><br><span class="line">なぜこの手（て）をすり抜（ぬ）ける　物（もの）ばかり与（あた）えたか</span><br><span class="line">それでもなおしがみつく　僕（ぼく）らは醜（みにく）いかい</span><br><span class="line">それとも、綺麗（きれい）かい</span><br><span class="line">答（こた）えてよ</span><br><span class="line"></span><br><span class="line">愛（あい）の歌（うた）も　歌（うた）われ尽（つ）くした</span><br><span class="line">数多（あまた）の映画（えいが）で　語（かた）られ尽（つ）くした</span><br><span class="line">そんな荒野（こうや）に　生（う）まれ落（お）ちた僕（ぼく）、君（きみ）　それでも</span><br><span class="line">愛（あい）にできることはまだあるよ</span><br><span class="line">僕（ぼく）にできることはまだあるよ</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;歌曲信息&quot;&gt;&lt;a href=&quot;#歌曲信息&quot; class=&quot;headerlink&quot; title=&quot;歌曲信息&quot;&gt;&lt;/a&gt;歌曲信息&lt;/h2&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;歌曲：愛にできることはまだあるかい&lt;/li&gt;
&lt;li&gt;歌手：RADWIMPS&lt;/li&gt;
&lt;li&gt;作词：野田洋次郎&lt;/li&gt;
&lt;li&gt;作曲：野田洋次郎&lt;/li&gt;
&lt;li&gt;专辑：天気の子（2019年7月19日发行）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;天气之子的主题曲，在大陆上映之前一个多月就出了，超级喜欢的歌，让好久没翻唱日语歌的我忍不住学了。这首歌难的地方就是歌词，两大段不同的歌词很难记，也是学了一个月左右，在上映前几天学的差不多，看电影时跟着就唱出来了。去看了电影再看看这首歌的MV，真的会很有感触。&lt;/p&gt;
    
    </summary>
    
      <category term="ニホンゴ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/"/>
    
      <category term="ウタ" scheme="http://tashi711.top/categories/%E3%83%8B%E3%83%9B%E3%83%B3%E3%82%B4/%E3%82%A6%E3%82%BF/"/>
    
    
      <category term="RADWIMPS" scheme="http://tashi711.top/tags/RADWIMPS/"/>
    
      <category term="天気の子" scheme="http://tashi711.top/tags/%E5%A4%A9%E6%B0%97%E3%81%AE%E5%AD%90/"/>
    
  </entry>
  
  <entry>
    <title>关于本站</title>
    <link href="http://tashi711.top/about/about/"/>
    <id>http://tashi711.top/about/about/</id>
    <published>2019-11-03T15:57:02.000Z</published>
    <updated>2019-11-04T13:19:13.277Z</updated>
    
    <content type="html"><![CDATA[<h2 id="2019-11-03"><a href="#2019-11-03" class="headerlink" title="2019/11/03"></a>2019/11/03</h2><p>本站将迎来一个转折点，先简单介绍下本站吧，大概去年4月左右，笔者有了搭一个个人博客的想法，并马上付诸实践了，在阿里云上买了一年的tashi711.xyz这个域名，用比较方便的hexo作为框架，部署在github pages上。主要目的一是感觉很多程序员都有自己的博客，感觉搭一个蛮酷的，二是想到快要找工作了，这个东西或许是个加分项<del>（事实证明并没有任何卵用）</del>。一开始主要放一些结题报告呀和之前攒的一些自己翻译的日语歌的假名注音，后来为了更加符合刚才提到的第二个目的的设定，就把日语部分先关闭掉了，只留下编程相关的东西（现在已经重新上线）。后来一年的域名快要过期了，续费貌似还挺贵的，干脆就直接换了个域名，买了5年，也就是现在的tashi711.top，同时逐渐优化上面的内容，还加上了https认证。最近结束了找工作，本站也不再是会放在简历上会被别人看到的一个工具了<del>（而且似乎也没人会在看吧hhhh）</del>，现在我更想把这个站打造成一个自己的小空间吧，不过也会完全对外开放，把一些我想说的东西放在上面<del>（虽然没多少人会看）</del>。总的来说，可能5年之后这个站就永久关闭了，希望这个站陪伴自己30岁之前的一点一滴吧。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;2019-11-03&quot;&gt;&lt;a href=&quot;#2019-11-03&quot; class=&quot;headerlink&quot; title=&quot;2019/11/03&quot;&gt;&lt;/a&gt;2019/11/03&lt;/h2&gt;&lt;p&gt;本站将迎来一个转折点，先简单介绍下本站吧，大概去年4月左右，笔者有了搭一个个人博客的想法，并马上付诸实践了，在阿里云上买了一年的tashi711.xyz这个域名，用比较方便的hexo作为框架，部署在github pages上。主要目的一是感觉很多程序员都有自己的博客，感觉搭一个蛮酷的，二是想到快要找工作了，这个东西或许是个加分项&lt;del&gt;（事实证明并没有任何卵用）&lt;/del&gt;。一开始主要放一些结题报告呀和之前攒的一些自己翻译的日语歌的假名注音，后来为了更加符合刚才提到的第二个目的的设定，就把日语部分先关闭掉了，只留下编程相关的东西（现在已经重新上线）。后来一年的域名快要过期了，续费貌似还挺贵的，干脆就直接换了个域名，买了5年，也就是现在的tashi711.top，同时逐渐优化上面的内容，还加上了https认证。最近结束了找工作，本站也不再是会放在简历上会被别人看到的一个工具了&lt;del&gt;（而且似乎也没人会在看吧hhhh）&lt;/del&gt;，现在我更想把这个站打造成一个自己的小空间吧，不过也会完全对外开放，把一些我想说的东西放在上面&lt;del&gt;（虽然没多少人会看）&lt;/del&gt;。总的来说，可能5年之后这个站就永久关闭了，希望这个站陪伴自己30岁之前的一点一滴吧。&lt;/p&gt;
    
    </summary>
    
      <category term="关于本站" scheme="http://tashi711.top/categories/%E5%85%B3%E4%BA%8E%E6%9C%AC%E7%AB%99/"/>
    
    
      <category term="关于" scheme="http://tashi711.top/tags/%E5%85%B3%E4%BA%8E/"/>
    
  </entry>
  
  <entry>
    <title>「Airbnb」笔试小结</title>
    <link href="http://tashi711.top/programming/reports/others/airbnb-1/"/>
    <id>http://tashi711.top/programming/reports/others/airbnb-1/</id>
    <published>2019-09-27T01:57:24.000Z</published>
    <updated>2019-09-27T12:31:08.174Z</updated>
    
    <content type="html"><![CDATA[<h2 id="例行吐槽"><a href="#例行吐槽" class="headerlink" title="例行吐槽"></a>例行吐槽</h2><p>大概就最近找工作实在太忙，已经停更很久了。等拿到正式offer后会写一个总结性的文章。这次笔试105分钟两道题，总体不难，评测系统是爱彼迎自己的。下面的题目都是回忆版，没有原题与代码。</p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="1、模块依赖"><a href="#1、模块依赖" class="headerlink" title="1、模块依赖"></a>1、模块依赖</h3><p>读入许多模块的依赖关系，问每个模块改动后有多少模块需要重新编译。</p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>主要是细节处理吧，比如读入输出的格式需要处理，另外需要先把所有模块名字存在map里对应好后再建图。题目给了个反向建边提示没太懂，因为其实按照原图直接dfs每个点，能够到达的最后累和++即可。</p><h3 id="2、求除法结果"><a href="#2、求除法结果" class="headerlink" title="2、求除法结果"></a>2、求除法结果</h3><p>给定两个整数，求其除法结果，需要给出具体循环节。</p><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br><span class="line">3 1</span><br><span class="line">1 3</span><br><span class="line">1234 990</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">0.5</span><br><span class="line">3</span><br><span class="line">0.(3)</span><br><span class="line">1.2(46)</span><br></pre></td></tr></table></figure></p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>我实现的很暴力，就因为整数除法若产生循环节也不会太长，因此枚举足够长度，先从后往前看有没有重复，有的话再从前往后找第一个循环节。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;例行吐槽&quot;&gt;&lt;a href=&quot;#例行吐槽&quot; class=&quot;headerlink&quot; title=&quot;例行吐槽&quot;&gt;&lt;/a&gt;例行吐槽&lt;/h2&gt;&lt;p&gt;大概就最近找工作实在太忙，已经停更很久了。等拿到正式offer后会写一个总结性的文章。这次笔试105分钟两道题，总体不难，评测系统是爱彼迎自己的。下面的题目都是回忆版，没有原题与代码。&lt;/p&gt;
&lt;h2 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;h3 id=&quot;1、模块依赖&quot;&gt;&lt;a href=&quot;#1、模块依赖&quot; class=&quot;headerlink&quot; title=&quot;1、模块依赖&quot;&gt;&lt;/a&gt;1、模块依赖&lt;/h3&gt;&lt;p&gt;读入许多模块的依赖关系，问每个模块改动后有多少模块需要重新编译。&lt;/p&gt;
&lt;h4 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h4&gt;&lt;p&gt;主要是细节处理吧，比如读入输出的格式需要处理，另外需要先把所有模块名字存在map里对应好后再建图。题目给了个反向建边提示没太懂，因为其实按照原图直接dfs每个点，能够到达的最后累和++即可。&lt;/p&gt;
&lt;h3 id=&quot;2、求除法结果&quot;&gt;&lt;a href=&quot;#2、求除法结果&quot; class=&quot;headerlink&quot; title=&quot;2、求除法结果&quot;&gt;&lt;/a&gt;2、求除法结果&lt;/h3&gt;&lt;p&gt;给定两个整数，求其除法结果，需要给出具体循环节。&lt;/p&gt;
&lt;p&gt;输入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;2 4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1234 990&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0.5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0.(3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1.2(46)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;解题思路-1&quot;&gt;&lt;a href=&quot;#解题思路-1&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h4&gt;&lt;p&gt;我实现的很暴力，就因为整数除法若产生循环节也不会太长，因此枚举足够长度，先从后往前看有没有重复，有的话再从前往后找第一个循环节。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="解题报告" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="笔试" scheme="http://tashi711.top/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>「单例模式」再探</title>
    <link href="http://tashi711.top/programming/others/singleton-more/"/>
    <id>http://tashi711.top/programming/others/singleton-more/</id>
    <published>2019-09-11T03:15:34.000Z</published>
    <updated>2019-09-11T09:56:36.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>对最近学的设计模式进行总结与深入。本文主要讲单例模式</p><h2 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h2><h3 id="懒汉式（线程不安全）"><a href="#懒汉式（线程不安全）" class="headerlink" title="懒汉式（线程不安全）"></a>懒汉式（线程不安全）</h3><p>以下实现中，私有静态变量被延迟实例化，这样做的好处是，如果没有用到该类，那么就不会实例化，从而节约资源。这个实现在多线程环境下是不安全的，如果多个线程能够同时进入if，并且此时指针为空，那么会有多个线程执行new语句，这将导致实例化多次。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">singleton</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">static</span> singleton* <span class="title">get_unique_instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (unique_instance == <span class="literal">nullptr</span>) &#123;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="string">"init"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">      unique_instance = <span class="keyword">new</span> singleton;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> unique_instance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"f()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  singleton() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> singleton *unique_instance;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">singleton *singleton::unique_instance = <span class="literal">nullptr</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">auto</span> p1 = singleton::get_unique_instance();</span><br><span class="line">  p1-&gt;f();</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag2"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">auto</span> p2 = singleton::get_unique_instance();</span><br><span class="line">  p2-&gt;f();</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag3"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="饿汉式（线程安全）"><a href="#饿汉式（线程安全）" class="headerlink" title="饿汉式（线程安全）"></a>饿汉式（线程安全）</h3><p>线程不安全问题主要是由于实例化多次，采取直接实例化的方式就不会产生线程不安全问题。但是直接实例化的方式也丢失了延迟实例化带来的节约资源的好处。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">singleton</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">  <span class="function"><span class="keyword">static</span> singleton* <span class="title">get_unique_instance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> unique_instance;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">f</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"f()"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">  singleton() &#123;&#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">static</span> singleton *unique_instance;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">singleton *singleton::unique_instance = <span class="keyword">new</span> singleton;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag1"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">auto</span> p1 = singleton::get_unique_instance();</span><br><span class="line">  p1-&gt;f();</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag2"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">auto</span> p2 = singleton::get_unique_instance();</span><br><span class="line">  p2-&gt;f();</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="string">"flag3"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="懒汉式（线程安全）"><a href="#懒汉式（线程安全）" class="headerlink" title="懒汉式（线程安全）"></a>懒汉式（线程安全）</h3><p>只需要对get方法加锁，那么在一个时间点只能有一个线程能够进入该方法，从而避免了实例化多次。但是当一个线程进入该方法之后，其它试图进入该方法的线程都必须等待，即使指针已经被实例化了。这会让线程阻塞时间过长，因此该方法有性能问题，不推荐使用。</p><p>（代码略）</p><h3 id="双重校验锁（线程安全）"><a href="#双重校验锁（线程安全）" class="headerlink" title="双重校验锁（线程安全）"></a>双重校验锁（线程安全）</h3><p>指针只需要被实例化一次，之后就可以直接使用了。加锁操作只需要对实例化那部分的代码进行，只有当指针没有被实例化时，才需要进行加锁。双重校验锁先判断指针是否已经被实例化，如果没有被实例化，那么才对实例化语句进行加锁。</p><p>（代码略）</p><a id="more"></a><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>拖更好久，最近好忙，终于有点理解那些没素材的up主了hhh。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;对最近学的设计模式进行总结与深入。本文主要讲单例模式&lt;/p&gt;
&lt;h2 id=&quot;单例模式&quot;&gt;&lt;a href=&quot;#单例模式&quot; class=&quot;headerlink&quot; title=&quot;单例模式&quot;&gt;&lt;/a&gt;单例模式&lt;/h2&gt;&lt;h3 id=&quot;懒汉式（线程不安全）&quot;&gt;&lt;a href=&quot;#懒汉式（线程不安全）&quot; class=&quot;headerlink&quot; title=&quot;懒汉式（线程不安全）&quot;&gt;&lt;/a&gt;懒汉式（线程不安全）&lt;/h3&gt;&lt;p&gt;以下实现中，私有静态变量被延迟实例化，这样做的好处是，如果没有用到该类，那么就不会实例化，从而节约资源。这个实现在多线程环境下是不安全的，如果多个线程能够同时进入if，并且此时指针为空，那么会有多个线程执行new语句，这将导致实例化多次。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleton&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; singleton* &lt;span class=&quot;title&quot;&gt;get_unique_instance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (unique_instance == &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;init&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      unique_instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; singleton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; unique_instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;f()&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  singleton() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; singleton *unique_instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;singleton *singleton::unique_instance = &lt;span class=&quot;literal&quot;&gt;nullptr&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; p1 = singleton::get_unique_instance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p1-&amp;gt;f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; p2 = singleton::get_unique_instance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p2-&amp;gt;f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag3&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;饿汉式（线程安全）&quot;&gt;&lt;a href=&quot;#饿汉式（线程安全）&quot; class=&quot;headerlink&quot; title=&quot;饿汉式（线程安全）&quot;&gt;&lt;/a&gt;饿汉式（线程安全）&lt;/h3&gt;&lt;p&gt;线程不安全问题主要是由于实例化多次，采取直接实例化的方式就不会产生线程不安全问题。但是直接实例化的方式也丢失了延迟实例化带来的节约资源的好处。&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;singleton&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; singleton* &lt;span class=&quot;title&quot;&gt;get_unique_instance&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; unique_instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;f()&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;private&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  singleton() &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; singleton *unique_instance;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;singleton *singleton::unique_instance = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; singleton;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag1&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; p1 = singleton::get_unique_instance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p1-&amp;gt;f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag2&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; p2 = singleton::get_unique_instance();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  p2-&amp;gt;f();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;flag3&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;懒汉式（线程安全）&quot;&gt;&lt;a href=&quot;#懒汉式（线程安全）&quot; class=&quot;headerlink&quot; title=&quot;懒汉式（线程安全）&quot;&gt;&lt;/a&gt;懒汉式（线程安全）&lt;/h3&gt;&lt;p&gt;只需要对get方法加锁，那么在一个时间点只能有一个线程能够进入该方法，从而避免了实例化多次。但是当一个线程进入该方法之后，其它试图进入该方法的线程都必须等待，即使指针已经被实例化了。这会让线程阻塞时间过长，因此该方法有性能问题，不推荐使用。&lt;/p&gt;
&lt;p&gt;（代码略）&lt;/p&gt;
&lt;h3 id=&quot;双重校验锁（线程安全）&quot;&gt;&lt;a href=&quot;#双重校验锁（线程安全）&quot; class=&quot;headerlink&quot; title=&quot;双重校验锁（线程安全）&quot;&gt;&lt;/a&gt;双重校验锁（线程安全）&lt;/h3&gt;&lt;p&gt;指针只需要被实例化一次，之后就可以直接使用了。加锁操作只需要对实例化那部分的代码进行，只有当指针没有被实例化时，才需要进行加锁。双重校验锁先判断指针是否已经被实例化，如果没有被实例化，那么才对实例化语句进行加锁。&lt;/p&gt;
&lt;p&gt;（代码略）&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="设计模式" scheme="http://tashi711.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>「拼多多服务端研发工程师」笔试小结</title>
    <link href="http://tashi711.top/programming/reports/others/pdd-1/"/>
    <id>http://tashi711.top/programming/reports/others/pdd-1/</id>
    <published>2019-09-01T01:57:24.000Z</published>
    <updated>2019-09-01T09:04:26.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="暗影吐槽"><a href="#暗影吐槽" class="headerlink" title="暗影吐槽"></a><del>暗影吐槽</del></h2><p><del>大概快两个星期拖更，最近太忙了，结束实习项目以及应付各种笔试面试，这大概是我第一次在牛客笔试上AK（2小时4道题用了1小时20分钟，当然主要是题目太水），然后剩下的时间难得的写下题解吧。</del></p><h2 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h2><h3 id="1、优先偶数的有序TopN"><a href="#1、优先偶数的有序TopN" class="headerlink" title="1、优先偶数的有序TopN"></a>1、优先偶数的有序TopN</h3><p>读入数列和N，返回优先级最高点N个数，满足：1、偶数优先于奇数；2、同奇偶性数值大优先。数据量最多100。</p><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">555503,772867,756893,339138,399447,40662,859037,628085,855723,974471,599631,636153,581541,174761,948135,411485,554033,858627,402833,546467,574367,360461,566480,755523,222921,164287,420256,40043,977167,543295,944841,917125,331763,188173,353275,175757,950417,284578,617621,546561,913416,258741,260569,630583,252845;10</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">913416,566480,420256,339138,284578,40662,977167,974471,950417,948135</span><br></pre></td></tr></table></figure></p><h4 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h4><p>很水，做法很多，我这里直接定义一个二元lambda谓词作为sort的比较参数：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">auto</span> cmp = [](<span class="keyword">int</span> x, <span class="keyword">int</span> y) &#123;</span><br><span class="line">  <span class="keyword">if</span> ((x &amp; <span class="number">1</span>) == <span class="number">0</span> &amp;&amp; (y &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((x &amp; <span class="number">1</span>) == <span class="number">1</span> &amp;&amp; (y &amp; <span class="number">1</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> x &gt; y;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p><p>注意下输入格式就好，我直接用cin了。</p><a id="more"></a><h4 id="AC代码（C-）"><a href="#AC代码（C-）" class="headerlink" title="AC代码（C++）"></a>AC代码（C++）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> tashi711 &#123;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="keyword">double</span>&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k) &amp;&amp; k != <span class="string">'.'</span>) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = x * <span class="number">10.0</span> + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="string">'.'</span>) &#123;</span><br><span class="line">    k = getchar();</span><br><span class="line">    <span class="keyword">auto</span> y = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">      x += (k ^ <span class="number">0x30</span>) * (y /= <span class="number">10.0</span>);</span><br><span class="line">      k = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x, Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  nyuuryoku(x);</span><br><span class="line">  nyuuryoku(args...);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> LEN = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">array</span>&lt;<span class="keyword">int</span>, LEN&gt; buf;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">auto</span> p = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    buf[p++] = x % <span class="number">10</span> | <span class="number">0x30</span>;</span><br><span class="line">    x /= <span class="number">10</span>;</span><br><span class="line">  &#125; <span class="keyword">while</span> (x);</span><br><span class="line">  <span class="keyword">while</span> (p) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(buf[--p]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> pair&lt;<span class="keyword">double</span>, <span class="keyword">char</span>&gt;&amp; p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">char</span> format[] = <span class="string">"%.?lf"</span>;</span><br><span class="line">  format[<span class="number">2</span>] = p.second;</span><br><span class="line">  <span class="built_in">printf</span>(format, p.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokus</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s = <span class="string">""</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryokul(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  shutsuryokul();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  shutsuryokus(x);</span><br><span class="line">  shutsuryokul(args...);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> N = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">using</span> <span class="keyword">namespace</span> tashi711;</span><br><span class="line">  <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a;</span><br><span class="line">  <span class="keyword">int</span> u;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">cin</span> &gt;&gt; u) &#123;</span><br><span class="line">    a.push_back(u);</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line">    <span class="keyword">if</span> (c == <span class="string">';'</span>) &#123;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line">  <span class="keyword">auto</span> cmp = [](<span class="keyword">int</span> x, <span class="keyword">int</span> y) &#123;</span><br><span class="line">    <span class="keyword">if</span> ((x &amp; <span class="number">1</span>) == <span class="number">0</span> &amp;&amp; (y &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> ((x &amp; <span class="number">1</span>) == <span class="number">1</span> &amp;&amp; (y &amp; <span class="number">1</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x &gt; y;</span><br><span class="line">  &#125;;</span><br><span class="line">  sort(a.begin(), a.end(), cmp);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">    shutsuryoku(a[i]);</span><br><span class="line">    shutsuryoku(<span class="string">","</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  shutsuryokul(a[n - <span class="number">1</span>]);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、扑克游戏"><a href="#2、扑克游戏" class="headerlink" title="2、扑克游戏"></a>2、扑克游戏</h3><p>多组数据（不超过10组），每组数据给两个字符串，求问第一个字符串从左到右对每个字符分别怎么通过删除（d）、插到最左边（l）、插到最右边（r）这三种操作得到第二个字符串。字符串长度最多8。每组数据按字典序输出所有方案。</p><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">123</span><br><span class="line">3</span><br><span class="line">123</span><br><span class="line">321</span><br><span class="line">45</span><br><span class="line">67</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">d d l </span><br><span class="line">d d r </span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">l l l </span><br><span class="line">r l l </span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="解题思路-1"><a href="#解题思路-1" class="headerlink" title="解题思路"></a>解题思路</h4><p>数据很小，暴力枚举所有8的3次方，回溯检查即可。</p><h4 id="AC代码（C-）-1"><a href="#AC代码（C-）-1" class="headerlink" title="AC代码（C++）"></a>AC代码（C++）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> tashi711 &#123;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="keyword">double</span>&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k) &amp;&amp; k != <span class="string">'.'</span>) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = x * <span class="number">10.0</span> + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="string">'.'</span>) &#123;</span><br><span class="line">    k = getchar();</span><br><span class="line">    <span class="keyword">auto</span> y = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">      x += (k ^ <span class="number">0x30</span>) * (y /= <span class="number">10.0</span>);</span><br><span class="line">      k = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x, Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  nyuuryoku(x);</span><br><span class="line">  nyuuryoku(args...);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> LEN = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">array</span>&lt;<span class="keyword">int</span>, LEN&gt; buf;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">auto</span> p = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    buf[p++] = x % <span class="number">10</span> | <span class="number">0x30</span>;</span><br><span class="line">    x /= <span class="number">10</span>;</span><br><span class="line">  &#125; <span class="keyword">while</span> (x);</span><br><span class="line">  <span class="keyword">while</span> (p) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(buf[--p]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> pair&lt;<span class="keyword">double</span>, <span class="keyword">char</span>&gt;&amp; p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">char</span> format[] = <span class="string">"%.?lf"</span>;</span><br><span class="line">  format[<span class="number">2</span>] = p.second;</span><br><span class="line">  <span class="built_in">printf</span>(format, p.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokus</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s = <span class="string">""</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryokul(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  shutsuryokul();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  shutsuryokus(x);</span><br><span class="line">  shutsuryokul(args...);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">char</span> a[N];</span><br><span class="line"><span class="built_in">string</span> x, y;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> tashi711;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (p == n) &#123;</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">      <span class="keyword">if</span> (a[i] == <span class="string">'l'</span>) &#123;</span><br><span class="line">        res = x[i] + res;</span><br><span class="line">      &#125; <span class="keyword">else</span> <span class="keyword">if</span> (a[i] == <span class="string">'r'</span>) &#123;</span><br><span class="line">        res += x[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (res == y) &#123;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; ++i) &#123;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; a[i] &lt;&lt; <span class="string">' '</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="built_in">cout</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  a[p] = <span class="string">'d'</span>;</span><br><span class="line">  dfs(p + <span class="number">1</span>);</span><br><span class="line">  a[p] = <span class="string">'l'</span>;</span><br><span class="line">  dfs(p + <span class="number">1</span>);</span><br><span class="line">  a[p] = <span class="string">'r'</span>;</span><br><span class="line">  dfs(p + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> t;</span><br><span class="line">  nyuuryoku(t);</span><br><span class="line">  <span class="keyword">while</span> (t--) &#123;</span><br><span class="line">    nyuuryoku(x, y);</span><br><span class="line">    n = x.size();</span><br><span class="line">    shutsuryokul(<span class="string">"&#123;"</span>);</span><br><span class="line">    dfs(<span class="number">0</span>);</span><br><span class="line">    shutsuryokul(<span class="string">"&#125;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3、骰子期望"><a href="#3、骰子期望" class="headerlink" title="3、骰子期望"></a>3、骰子期望</h3><p>扔n（不超过50）个骰子，第i个骰子可能等概率扔出1到Xi（不超过50），求这n个骰子最大值的期望（保留两位小数）。</p><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">2</span><br><span class="line">2 2</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1.75</span><br></pre></td></tr></table></figure></p><h4 id="解题思路-2"><a href="#解题思路-2" class="headerlink" title="解题思路"></a>解题思路</h4><p>定义xiaoyu[i]为最大值小于等于i的概率（<del>原谅我这风骚而又硬核的命名</del>），那么xiaoyu[i]等于每个骰子小于等于i的概率之积，对于单个骰子小于等于i的概率，如果i小于等于Xi，那么是i/Xi，如果i大于Xi，那么是1。再定义dengyu[i]为最大值等于i的概率，显然dengyu[i] = xiaoyu[i] - xiaoyu[i-1]。最终的结果就是i*dengyu[i]之和。以上的i都是从1到50（或者可以是1到max{Xi}）。</p><h4 id="AC代码（C-）-2"><a href="#AC代码（C-）-2" class="headerlink" title="AC代码（C++）"></a>AC代码（C++）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> tashi711 &#123;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="keyword">double</span>&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k) &amp;&amp; k != <span class="string">'.'</span>) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = x * <span class="number">10.0</span> + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="string">'.'</span>) &#123;</span><br><span class="line">    k = getchar();</span><br><span class="line">    <span class="keyword">auto</span> y = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">      x += (k ^ <span class="number">0x30</span>) * (y /= <span class="number">10.0</span>);</span><br><span class="line">      k = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x, Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  nyuuryoku(x);</span><br><span class="line">  nyuuryoku(args...);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> LEN = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">array</span>&lt;<span class="keyword">int</span>, LEN&gt; buf;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">auto</span> p = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    buf[p++] = x % <span class="number">10</span> | <span class="number">0x30</span>;</span><br><span class="line">    x /= <span class="number">10</span>;</span><br><span class="line">  &#125; <span class="keyword">while</span> (x);</span><br><span class="line">  <span class="keyword">while</span> (p) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(buf[--p]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> pair&lt;<span class="keyword">double</span>, <span class="keyword">char</span>&gt;&amp; p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">char</span> format[] = <span class="string">"%.?lf"</span>;</span><br><span class="line">  format[<span class="number">2</span>] = p.second;</span><br><span class="line">  <span class="built_in">printf</span>(format, p.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokus</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s = <span class="string">""</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryokul(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  shutsuryokul();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  shutsuryokus(x);</span><br><span class="line">  shutsuryokul(args...);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> N = <span class="number">100</span>, M = <span class="number">50</span>;</span><br><span class="line"><span class="keyword">int</span> a[N];</span><br><span class="line"><span class="keyword">double</span> xiaoyu[N], dengyu[N];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> tashi711;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n;</span><br><span class="line">  nyuuryoku(n);</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">    nyuuryoku(a[i]);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">double</span> ans = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= M; ++i) &#123;</span><br><span class="line">    xiaoyu[i] = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n; ++j) &#123;</span><br><span class="line">      xiaoyu[i] *= (a[j] &gt;= i ? <span class="number">1.0</span> * i / a[j] : <span class="number">1.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    dengyu[i] = xiaoyu[i] - xiaoyu[i - <span class="number">1</span>];</span><br><span class="line">    ans += dengyu[i] * i;</span><br><span class="line">  &#125;</span><br><span class="line">  shutsuryokul(make_pair(ans, <span class="string">'2'</span>));</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、二维表第k大数"><a href="#4、二维表第k大数" class="headerlink" title="4、二维表第k大数"></a>4、二维表第k大数</h3><p>给定n、m（均不超过40000），求1×1、1×2、……、1×m、2×1、2×2、……、2×m、……、……、n×1、n×2、……、n×m（也就是1到n与1到m两两相乘的n×m个结果）当中的第k大。</p><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3 3 4</span><br></pre></td></tr></table></figure></p><p>输出：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure></p><h4 id="解题思路-3"><a href="#解题思路-3" class="headerlink" title="解题思路"></a>解题思路</h4><p>二分答案。为了方便计算，原问题等价于求第n×m-k+1小的数。每次检查比某个数小于等于的有多少个，分别用1到n去除这个数，结果与m取最小，累加这个结果即可，单次验证复杂度O(N)，总的复杂度O(NlogN)。</p><h4 id="AC代码（C-）-3"><a href="#AC代码（C-）-3" class="headerlink" title="AC代码（C++）"></a>AC代码（C++）</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> tashi711 &#123;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = (x &lt;&lt; <span class="number">3</span>) + (x &lt;&lt; <span class="number">1</span>) + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="keyword">double</span>&amp; x)</span> </span>&#123;</span><br><span class="line">  x = <span class="number">0.0</span>;</span><br><span class="line">  <span class="keyword">auto</span> neg = <span class="number">0</span>, k = getchar();</span><br><span class="line">  <span class="keyword">while</span> (!<span class="built_in">isdigit</span>(k) &amp;&amp; k != <span class="string">'.'</span>) &#123;</span><br><span class="line">    neg |= k == <span class="string">'-'</span>;</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">    x = x * <span class="number">10.0</span> + (k ^ <span class="number">0x30</span>);</span><br><span class="line">    k = getchar();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (k == <span class="string">'.'</span>) &#123;</span><br><span class="line">    k = getchar();</span><br><span class="line">    <span class="keyword">auto</span> y = <span class="number">1.0</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">isdigit</span>(k)) &#123;</span><br><span class="line">      x += (k ^ <span class="number">0x30</span>) * (y /= <span class="number">10.0</span>);</span><br><span class="line">      k = getchar();</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (neg) &#123;</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(<span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">nyuuryoku</span><span class="params">(T&amp; x, Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  nyuuryoku(x);</span><br><span class="line">  nyuuryoku(args...);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(T x)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> LEN = <span class="number">20</span>;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">array</span>&lt;<span class="keyword">int</span>, LEN&gt; buf;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">auto</span> p = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">// not numeric_limits&lt;T&gt;::min()</span></span><br><span class="line">  <span class="keyword">if</span> (x &lt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">'-'</span>);</span><br><span class="line">    x = -x;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">do</span> &#123;</span><br><span class="line">    buf[p++] = x % <span class="number">10</span> | <span class="number">0x30</span>;</span><br><span class="line">    x /= <span class="number">10</span>;</span><br><span class="line">  &#125; <span class="keyword">while</span> (x);</span><br><span class="line">  <span class="keyword">while</span> (p) &#123;</span><br><span class="line">    <span class="built_in">putchar</span>(buf[--p]);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> pair&lt;<span class="keyword">double</span>, <span class="keyword">char</span>&gt;&amp; p)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">char</span> format[] = <span class="string">"%.?lf"</span>;</span><br><span class="line">  format[<span class="number">2</span>] = p.second;</span><br><span class="line">  <span class="built_in">printf</span>(format, p.first);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">"%s"</span>, s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryoku</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokus</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  <span class="built_in">putchar</span>(<span class="string">' '</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span>* s = <span class="string">""</span>)</span> </span>&#123;</span><br><span class="line">  <span class="built_in">puts</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s)</span> </span>&#123;</span><br><span class="line">  shutsuryokul(s.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x)</span> </span>&#123;</span><br><span class="line">  shutsuryoku(x);</span><br><span class="line">  shutsuryokul();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">template</span> &lt;<span class="keyword">typename</span> T, <span class="keyword">typename</span>... Args&gt;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">shutsuryokul</span><span class="params">(<span class="keyword">const</span> T&amp; x, <span class="keyword">const</span> Args&amp;... args)</span> </span>&#123;</span><br><span class="line">  shutsuryokus(x);</span><br><span class="line">  shutsuryokul(args...);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">constexpr</span> <span class="keyword">auto</span> N = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> tashi711;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="keyword">int</span> n, m, k;</span><br><span class="line">  nyuuryoku(n, m, k);</span><br><span class="line">  k = n * m - k + <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">int</span> u = <span class="number">1</span>, v = n * m;</span><br><span class="line">  <span class="keyword">auto</span> calc = [n, m](<span class="keyword">int</span> p) &#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) &#123;</span><br><span class="line">      res += min(m, p / i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">while</span> (u &lt; v) &#123;</span><br><span class="line">    <span class="keyword">int</span> mid = u + (v - u) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = calc(mid);</span><br><span class="line">    <span class="keyword">if</span> (cnt &gt;= k) &#123;</span><br><span class="line">      v = mid;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      u = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  shutsuryokul(u);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;暗影吐槽&quot;&gt;&lt;a href=&quot;#暗影吐槽&quot; class=&quot;headerlink&quot; title=&quot;暗影吐槽&quot;&gt;&lt;/a&gt;&lt;del&gt;暗影吐槽&lt;/del&gt;&lt;/h2&gt;&lt;p&gt;&lt;del&gt;大概快两个星期拖更，最近太忙了，结束实习项目以及应付各种笔试面试，这大概是我第一次在牛客笔试上AK（2小时4道题用了1小时20分钟，当然主要是题目太水），然后剩下的时间难得的写下题解吧。&lt;/del&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h2&gt;&lt;h3 id=&quot;1、优先偶数的有序TopN&quot;&gt;&lt;a href=&quot;#1、优先偶数的有序TopN&quot; class=&quot;headerlink&quot; title=&quot;1、优先偶数的有序TopN&quot;&gt;&lt;/a&gt;1、优先偶数的有序TopN&lt;/h3&gt;&lt;p&gt;读入数列和N，返回优先级最高点N个数，满足：1、偶数优先于奇数；2、同奇偶性数值大优先。数据量最多100。&lt;/p&gt;
&lt;p&gt;输入：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;555503,772867,756893,339138,399447,40662,859037,628085,855723,974471,599631,636153,581541,174761,948135,411485,554033,858627,402833,546467,574367,360461,566480,755523,222921,164287,420256,40043,977167,543295,944841,917125,331763,188173,353275,175757,950417,284578,617621,546561,913416,258741,260569,630583,252845;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;输出：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;913416,566480,420256,339138,284578,40662,977167,974471,950417,948135&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h4&gt;&lt;p&gt;很水，做法很多，我这里直接定义一个二元lambda谓词作为sort的比较参数：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;auto&lt;/span&gt; cmp = [](&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; y) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((x &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; (y &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ((x &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;amp;&amp;amp; (y &amp;amp; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; x &amp;gt; y;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;注意下输入格式就好，我直接用cin了。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="解题报告" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="笔试" scheme="http://tashi711.top/tags/%E7%AC%94%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>「真假硬币」——一道有趣的概率题</title>
    <link href="http://tashi711.top/programming/others/coin/"/>
    <id>http://tashi711.top/programming/others/coin/</id>
    <published>2019-08-19T03:15:34.000Z</published>
    <updated>2019-08-19T16:30:02.560Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>在看面筋时遇到这样一道题：真硬币m个，假币n个。假币只有正面。真币投掷正面概率为p。其中某硬币投掷k次都是正面，求它为真币概率。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>想了蛮久，才发现这是道条件概率。P(x=1 | k) = P(x=1 and k) / P(k)。其中P(x=1 and k) = m/(n+m) * p^k，P(k) = n/(n+m) + m/(n+m) * p^k。</p><p><del>他也没给标答呀，各位帮忙检查下？</del></p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;在看面筋时遇到这样一道题：真硬币m个，假币n个。假币只有正面。真币投掷正面概率为p。其中某硬币投掷k次都是正面，求它为真币概率。&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;想了蛮久，才发现这是道条件概率。P(x=1 | k) = P(x=1 and k) / P(k)。其中P(x=1 and k) = m/(n+m) * p^k，P(k) = n/(n+m) + m/(n+m) * p^k。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;他也没给标答呀，各位帮忙检查下？&lt;/del&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="概率论" scheme="http://tashi711.top/tags/%E6%A6%82%E7%8E%87%E8%AE%BA/"/>
    
  </entry>
  
  <entry>
    <title>「LeetCode 287」解题报告</title>
    <link href="http://tashi711.top/programming/reports/leetcode/leetcode-287/"/>
    <id>http://tashi711.top/programming/reports/leetcode/leetcode-287/</id>
    <published>2019-08-18T15:57:02.000Z</published>
    <updated>2019-08-18T12:37:49.466Z</updated>
    
    <content type="html"><![CDATA[<h2 id="287-Find-the-Duplicate-Number"><a href="#287-Find-the-Duplicate-Number" class="headerlink" title="287. Find the Duplicate Number"></a><a href="https://leetcode.com/problems/find-the-duplicate-number/" target="_blank" rel="noopener">287. Find the Duplicate Number</a></h2><p>Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.</p><p>You must not modify the array (assume the array is read only).<br>You must use only constant, O(1) extra space.<br>Your runtime complexity should be less than O(n2).<br>There is only one duplicate number in the array, but it could be repeated more than once.</p><h3 id="题目分析"><a href="#题目分析" class="headerlink" title="题目分析"></a>题目分析</h3><p><del>top100肝不动了、随便看看有意思的题目吧。</del></p><p>这题蛮有意思，一开始我怎么也想不到一个好的方法来满足题目要求。看了下高赞回答（的证明），学习一波，首先容易证明有且仅有一个圈，用快慢指针的方法先进圈，假设走了s（慢）步，圈长c，则有2s = s + n*c =&gt; s = n*c。然后假设起点到入圈点长度为x，则s = x+a =&gt; x+a = s = n*c =&gt; x+a = n*c =&gt; x+a = (n-1)*c+c =&gt; x = (n-1)*c+c-a，其中c-a为入圈点到见面点的长度，因此就有了官方Solution的做法，即同时从起点和见面点分别出发，最后一定在入圈点汇聚。</p><h3 id="AC代码（C-）"><a href="#AC代码（C-）" class="headerlink" title="AC代码（C++）"></a>AC代码（C++）</h3><a id="more"></a><p><del>参照官方Solution。</del></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;287-Find-the-Duplicate-Number&quot;&gt;&lt;a href=&quot;#287-Find-the-Duplicate-Number&quot; class=&quot;headerlink&quot; title=&quot;287. Find the Duplicate Number&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode.com/problems/find-the-duplicate-number/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;287. Find the Duplicate Number&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Given an array nums containing n + 1 integers where each integer is between 1 and n (inclusive), prove that at least one duplicate number must exist. Assume that there is only one duplicate number, find the duplicate one.&lt;/p&gt;
&lt;p&gt;You must not modify the array (assume the array is read only).&lt;br&gt;You must use only constant, O(1) extra space.&lt;br&gt;Your runtime complexity should be less than O(n2).&lt;br&gt;There is only one duplicate number in the array, but it could be repeated more than once.&lt;/p&gt;
&lt;h3 id=&quot;题目分析&quot;&gt;&lt;a href=&quot;#题目分析&quot; class=&quot;headerlink&quot; title=&quot;题目分析&quot;&gt;&lt;/a&gt;题目分析&lt;/h3&gt;&lt;p&gt;&lt;del&gt;top100肝不动了、随便看看有意思的题目吧。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;这题蛮有意思，一开始我怎么也想不到一个好的方法来满足题目要求。看了下高赞回答（的证明），学习一波，首先容易证明有且仅有一个圈，用快慢指针的方法先进圈，假设走了s（慢）步，圈长c，则有2s = s + n*c =&amp;gt; s = n*c。然后假设起点到入圈点长度为x，则s = x+a =&amp;gt; x+a = s = n*c =&amp;gt; x+a = n*c =&amp;gt; x+a = (n-1)*c+c =&amp;gt; x = (n-1)*c+c-a，其中c-a为入圈点到见面点的长度，因此就有了官方Solution的做法，即同时从起点和见面点分别出发，最后一定在入圈点汇聚。&lt;/p&gt;
&lt;h3 id=&quot;AC代码（C-）&quot;&gt;&lt;a href=&quot;#AC代码（C-）&quot; class=&quot;headerlink&quot; title=&quot;AC代码（C++）&quot;&gt;&lt;/a&gt;AC代码（C++）&lt;/h3&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="解题报告" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/"/>
    
      <category term="LeetCode" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E8%A7%A3%E9%A2%98%E6%8A%A5%E5%91%8A/LeetCode/"/>
    
    
      <category term="巧妙" scheme="http://tashi711.top/tags/%E5%B7%A7%E5%A6%99/"/>
    
  </entry>
  
  <entry>
    <title>「内存对齐」问题探究</title>
    <link href="http://tashi711.top/programming/others/padding/"/>
    <id>http://tashi711.top/programming/others/padding/</id>
    <published>2019-08-17T03:15:34.000Z</published>
    <updated>2019-08-15T17:05:02.911Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>每个特定平台上的编译器都有自己的默认“对齐系数”(也叫对齐模数)。程序员可以通过预编译命令#pragma pack(n)，n=1,2,4,8,16,…来改变这一系数，其中的n就是需要指定的“对齐系数”。</p><h2 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h2><p>1.对于结构的各个成员，第一个成员位于偏移为0的位置，以后的每个数据成员的偏移量必须是min(#pragma pack指定的数,这个数据成员的自身长度)的倍数。</p><p>2.在所有的数据成员完成各自对齐之后，结构或联合体本身也要进行对齐，对齐将按照 #pragram pack指定的数值和结构或者联合体最大数据成员长度中比较小的那个，也就是min(#pragram pack, 长度最长的数据成员)。</p><p>（结合1、2可推断：当#pragma pack的n值等于或超过所有数据成员长度的时候，这个n值的大小将不产生任何效果。）</p><a id="more"></a><h2 id="栗子"><a href="#栗子" class="headerlink" title="栗子"></a>栗子</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack(4)</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">A</span> &#123;</span></span><br><span class="line">  <span class="keyword">double</span> d;</span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">B</span> &#123;</span></span><br><span class="line">  <span class="keyword">char</span> c;</span><br><span class="line">  <span class="keyword">double</span> d;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">C</span> &#123;</span></span><br><span class="line">  <span class="keyword">char</span> a;</span><br><span class="line">  <span class="keyword">int</span> b;</span><br><span class="line">  <span class="keyword">short</span> c;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">D</span> &#123;</span></span><br><span class="line">  <span class="keyword">short</span> c;</span><br><span class="line">  <span class="keyword">char</span> a;</span><br><span class="line">  <span class="keyword">int</span> b;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(A) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(B) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(C) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="built_in">cout</span> &lt;&lt; <span class="keyword">sizeof</span>(D) &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为16，16，12，8。如果#pragma pack(8)则输出16，24，12，8。应该不难推导。</p><p>需要注意的是在我的机器上#pragma pack(4)时会报warning，告诉我B不太对劲，大概因为如果在64位机上做#pragma pack(4)且那个double应当跨越而被强行缩了（通常让系统默认#pragma pack比较好，64位机应该默认8）。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;每个特定平台上的编译器都有自己的默认“对齐系数”(也叫对齐模数)。程序员可以通过预编译命令#pragma pack(n)，n=1,2,4,8,16,…来改变这一系数，其中的n就是需要指定的“对齐系数”。&lt;/p&gt;
&lt;h2 id=&quot;规则&quot;&gt;&lt;a href=&quot;#规则&quot; class=&quot;headerlink&quot; title=&quot;规则&quot;&gt;&lt;/a&gt;规则&lt;/h2&gt;&lt;p&gt;1.对于结构的各个成员，第一个成员位于偏移为0的位置，以后的每个数据成员的偏移量必须是min(#pragma pack指定的数,这个数据成员的自身长度)的倍数。&lt;/p&gt;
&lt;p&gt;2.在所有的数据成员完成各自对齐之后，结构或联合体本身也要进行对齐，对齐将按照 #pragram pack指定的数值和结构或者联合体最大数据成员长度中比较小的那个，也就是min(#pragram pack, 长度最长的数据成员)。&lt;/p&gt;
&lt;p&gt;（结合1、2可推断：当#pragma pack的n值等于或超过所有数据成员长度的时候，这个n值的大小将不产生任何效果。）&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="内存对齐" scheme="http://tashi711.top/tags/%E5%86%85%E5%AD%98%E5%AF%B9%E9%BD%90/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之「策略模式」</title>
    <link href="http://tashi711.top/programming/others/strategy/"/>
    <id>http://tashi711.top/programming/others/strategy/</id>
    <published>2019-08-16T03:15:34.000Z</published>
    <updated>2019-08-14T13:27:52.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>策略模式（Strategy Pattern）：定义一系列算法，将每一个算法封装起来，并让它们可以相互替换。策略模式让算法独立于使用它的客户而变化，也称为政策模式（Policy）。策略模式是一种对象行为型模式。</p><a id="more"></a><h2 id="代码（C-）"><a href="#代码（C-）" class="headerlink" title="代码（C++）"></a>代码（C++）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Context.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStrategyA.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStrategyB.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Strategy.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Strategy * s1 = <span class="keyword">new</span> ConcreteStrategyA();</span><br><span class="line">Context * cxt = <span class="keyword">new</span> Context();</span><br><span class="line">cxt-&gt;setStrategy(s1);</span><br><span class="line">cxt-&gt;algorithm();</span><br><span class="line"></span><br><span class="line">Strategy *s2 = <span class="keyword">new</span> ConcreteStrategyB();</span><br><span class="line">cxt-&gt;setStrategy(s2);</span><br><span class="line">cxt-&gt;algorithm();</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> s1;</span><br><span class="line"><span class="keyword">delete</span> s2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> rac1 = <span class="number">0x1</span>;</span><br><span class="line"><span class="keyword">int</span> rac2 = <span class="number">0x2</span>;</span><br><span class="line"><span class="keyword">int</span> rac3 = <span class="number">0x4</span>;</span><br><span class="line"><span class="keyword">int</span> rac4 = <span class="number">0x8</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0xe</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0x5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> r1 = i &amp; rac1;</span><br><span class="line"><span class="keyword">int</span> r2 = i &amp; rac2;</span><br><span class="line"><span class="keyword">int</span> r3 = i &amp; rac3;</span><br><span class="line"><span class="keyword">int</span> r4 = i &amp; rac4;</span><br><span class="line"></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt;<span class="string">"res:"</span> &lt;&lt; r1 &lt;&lt; <span class="string">"/"</span> &lt;&lt; r2 &lt;&lt; <span class="string">"/"</span> &lt;&lt; r3 &lt;&lt; <span class="string">"/"</span> &lt;&lt; r4 &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  Context.h</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Strategy.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Context</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Context();</span><br><span class="line"><span class="keyword">virtual</span> ~Context();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">algorithm</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setStrategy</span><span class="params">(Strategy* st)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">Strategy *m_pStrategy;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  Context.cpp</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Context.h"</span></span></span><br><span class="line"></span><br><span class="line">Context::Context()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Context::~Context()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Context::algorithm()&#123;</span><br><span class="line">m_pStrategy-&gt;algorithm();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Context::setStrategy(Strategy* st)&#123;</span><br><span class="line">m_pStrategy = st;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  ConcreteStrategyA.h</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Strategy.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteStrategyA</span> :</span> <span class="keyword">public</span> Strategy</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">ConcreteStrategyA();</span><br><span class="line"><span class="keyword">virtual</span> ~ConcreteStrategyA();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">algorithm</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  ConcreteStrategyA.cpp</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStrategyA.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">ConcreteStrategyA::ConcreteStrategyA()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ConcreteStrategyA::~ConcreteStrategyA()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> ConcreteStrategyA::algorithm()&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"use algorithm A"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>策略模式是对算法的封装，它把算法的责任和算法本身分割开，委派给不同的对象管理。策略模式通常把一个系列的算法封装到一系列的策略类里面，作为一个抽象策略类的子类。用一句话来说，就是“准备一组算法，并将每一个算法封装起来，使得它们可以互换”。在策略模式中，应当由客户端自己决定在什么情况下使用什么具体策略角色。策略模式仅仅封装算法，提供新算法插入到已有系统中，以及老算法从系统中“退休”的方便，策略模式并不决定在何时使用何种算法，算法的选择由客户端来决定。这在一定程度上提高了系统的灵活性，但是客户端需要理解所有具体策略类之间的区别，以便选择合适的算法，这也是策略模式的缺点之一，在一定程度上增加了客户端的使用难度。</p><p>策略模式提供了对“开闭原则”的完美支持，用户可以在不修改原有系统的基础上选择算法或行为，也可以灵活地增加新的算法或行为。策略模式提供了管理相关的算法族的办法。策略模式提供了可以替换继承关系的办法。使用策略模式可以避免使用多重条件转移语句。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;策略模式（Strategy Pattern）：定义一系列算法，将每一个算法封装起来，并让它们可以相互替换。策略模式让算法独立于使用它的客户而变化，也称为政策模式（Policy）。策略模式是一种对象行为型模式。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="设计模式" scheme="http://tashi711.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>设计模式之「状态模式」</title>
    <link href="http://tashi711.top/programming/others/state/"/>
    <id>http://tashi711.top/programming/others/state/</id>
    <published>2019-08-15T03:15:34.000Z</published>
    <updated>2019-08-14T13:21:09.853Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>状态模式（State Pattern）：允许一个对象在其内部状态改变时改变它的行为，对象看起来似乎修改了它的类。其别名为状态对象（Objects for States），状态模式是一种对象行为型模式。</p><a id="more"></a><h2 id="代码（C-）"><a href="#代码（C-）" class="headerlink" title="代码（C++）"></a>代码（C++）</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Context.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStateA.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStateB.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a = <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="string">'0'</span> == a)</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"yes"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"no"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line"></span><br><span class="line">Context * c = <span class="keyword">new</span> Context();</span><br><span class="line">c-&gt;request();</span><br><span class="line">c-&gt;request();</span><br><span class="line">c-&gt;request();</span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span> c;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  Context.h</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"State.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Context</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">Context();</span><br><span class="line"><span class="keyword">virtual</span> ~Context();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">changeState</span><span class="params">(State * st)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">request</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">State *m_pState;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  Context.cpp</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Context.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStateA.h"</span></span></span><br><span class="line"></span><br><span class="line">Context::Context()&#123;</span><br><span class="line">m_pState = ConcreteStateA::Instance();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Context::~Context()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Context::changeState(State * st)&#123;</span><br><span class="line">m_pState = st;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> Context::request()&#123;</span><br><span class="line">m_pState-&gt;handle(<span class="keyword">this</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  ConcreteStateA.h</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"State.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ConcreteStateA</span> :</span> <span class="keyword">public</span> State</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="keyword">virtual</span> ~ConcreteStateA();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> State * <span class="title">Instance</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">handle</span><span class="params">(Context * c)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line">ConcreteStateA();</span><br><span class="line"><span class="keyword">static</span> State * m_pState;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"><span class="comment">//  ConcreteStateA.cpp</span></span><br><span class="line"><span class="comment">///////////////////////////////////////////////////////////</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStateA.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"ConcreteStateB.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Context.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line">State * ConcreteStateA::m_pState = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">ConcreteStateA::ConcreteStateA()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">ConcreteStateA::~ConcreteStateA()&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">State * ConcreteStateA::Instance()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="literal">NULL</span> == m_pState)</span><br><span class="line">&#123;</span><br><span class="line">m_pState = <span class="keyword">new</span> ConcreteStateA();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> m_pState;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> ConcreteStateA::handle(Context * c)&#123;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"doing something in State A.\n done,change state to B"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">c-&gt;changeState(ConcreteStateB::Instance());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>状态模式描述了对象状态的变化以及对象如何在每一种状态下表现出不同的行为。状态模式的关键是引入了一个抽象类来专门表示对象的状态，这个类我们叫做抽象状态类，而对象的每一种具体状态类都继承了该类，并在不同具体状态类中实现了不同状态的行为，包括各种状态之间的转换。</p><p>环境类实际上就是拥有状态的对象，环境类有时候可以充当状态管理器（State Manager）的角色，可以在环境类中对状态进行切换操作。抽象状态类可以是抽象类，也可以是接口，不同状态类就是继承这个父类的不同子类，状态类的产生是由于环境类存在多个状态，同时还满足两个条件： 这些状态经常需要切换，在不同的状态下对象的行为不同。因此可以将不同对象下的行为单独提取出来封装在具体的状态类中，使得环境类对象在其内部状态改变时可以改变它的行为，对象看起来似乎修改了它的类，而实际上是由于切换到不同的具体状态类实现的。由于环境类可以设置为任一具体状态类，因此它针对抽象状态类进行编程，在程序运行时可以将任一具体状态类的对象设置到环境类中，从而使得环境类可以改变内部状态，并且改变行为。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;状态模式（State Pattern）：允许一个对象在其内部状态改变时改变它的行为，对象看起来似乎修改了它的类。其别名为状态对象（Objects for States），状态模式是一种对象行为型模式。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="设计模式" scheme="http://tashi711.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>「扔鸡蛋问题」深入思考</title>
    <link href="http://tashi711.top/programming/others/drop-eggs/"/>
    <id>http://tashi711.top/programming/others/drop-eggs/</id>
    <published>2019-08-14T03:15:34.000Z</published>
    <updated>2019-08-13T15:11:25.856Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>一栋楼有L层，在第x层或者更高扔鸡蛋会破，而第x层往下则不会。给K个鸡蛋，求x，要求最差的情况下扔鸡蛋的次数最少。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>不止在一个地方看到这道面试题了，这里小结一下。</p><p>首先，归纳的去思考，K=1的时候，很显然，只能从第一层一个一个往上试，毕竟哪怕多跳一个，如果破了，就没办法知道x为当前层还是当前层减1。</p><p>k=2的时候，很容易想到将楼层划分成多个区间，第一个鸡蛋用来确定x属于哪个区间，第二个鸡蛋想K=1时一样按顺序遍历该区间找到 x。那么问题就转换为怎么划分区间满足最坏情况下扔鸡蛋次数最少。首先，第一个鸡蛋需要从第一个区间开始遍历到最后一个区间。如果按等大小的方式划分区间，即第二个鸡蛋的遍历次数固定。那么最坏的情况是x在最后一个区间，此时第一个鸡蛋遍历的次数最多。为了使最坏情况下两个鸡蛋总共遍历的次数比较少，那么后面的区间大小要比前面的区间更小。具体来说就是，第一个鸡蛋每多遍历一次，第二个鸡蛋就要少遍历一次，才使得x无论在哪个区间，总共遍历的次数一样。设第一个区间大小为x，那么第二个区间的大小为x-1，以此类推。那么x+(x-1)+(x-2)+…+1&gt;=L，得到x的下界（x取解的上取整），此时x为第一个区间的大小，同时也是最少的次数。（具体方案就是，从下到上依次试区间的最上端，如果没破，说明不在这个区间，否则在这个区间下端开始依次遍历，例如L=3，区间组成为2+1，第一次在第2层试，之后看结果在1或3层试，如果x不是正好取到下界，那么只可能区间更少或者区间数相同但对应长度不超过刚好取到时的情况，x次一定能完成，例如按照x+(x-1)+…+(L-sigma)，例如L=4，此时x取到3，区间分成3+1，一定不超过x正好取到3时（L=6）的3+2+1用的次数（当然其实也容易证明次数一定相等），当然也可以从上往下思考，变为1+2+1。）</p><p><strong>以上讨论比较容易理解，但是为了更好地讨论K更大的情况，以上讨论要注意一点，就是这里取的每个区间的最上端其实准确来说是两个区间的分隔，不应当属于任何一个区间，比如考虑求到最后两个区间（2+1）了，其实本质是1+1+1，从中间分隔的1看出应该选上还是下，之所以这么思考，是因为子问题的定义就是每一层都是未知的，如果最后的2+1将2看为子问题并不妥，因为这个2的上面的1是已知的。因此计算式子应当表示为(x-1)+1+(x-2)+1+…+1+2+1+1+1，当然这和原来的本质没区别，只是理解方式不同。</strong></p><p>K=2已经讨论的很清楚了，那么K更大呢，其实已经发现K在从1增加到2时用了K=1的思想（子状态）。那么先考虑K=3是否能用上K=2的情形呢。其实是可以的，可以想到将楼层划分成多个“大”区间，每个区间里面解决K=2的情况（用第二和第三个鸡蛋，每个“大”区间里按照K=2去分“小”区间），第一个鸡蛋就负责遍历“大”区间，而且后面的区间大小也要比前面的区间更小，每上一层就要少用一次，最上面的区间用两个鸡蛋2次就能解决，大小为3（1+2），再往下的区间还是用2次（为什么？结合上一段的思考），大小为3，再下面应该是用3次，大小为6（3+2+1），然后4次……，直到最下面是x-1次，大小为x(x-1)/2，求出x（上取整）。考虑x=3，此时L最大为3+1+3=7，在第4层做第一次判断，决定后两个鸡蛋是在上3层做K=2还是下3层做K=2。</p><p>K&gt;3，相信看到这里应该都会推了。</p><h2 id="代码实现（此处并没有代码）"><a href="#代码实现（此处并没有代码）" class="headerlink" title="代码实现（此处并没有代码）"></a>代码实现<del>（此处并没有代码）</del></h2><p>作为面试题，这道题可以用在各行各业，作为程序猿，当然得写写代码。首先容易看出对x的求解是一个高次方程，因此不能直接用程序接出来<del>（至少我不会，大概可以用一些数值分析的方法，我猜？）</del>，但是观察到f(x)关于x是单调递增的，因此可以二分答案，另外，其实f关于x也不是很明显有一步到位的式子表示的，因此还是需要迭代去求，从K=1的f（就是x）到K=2（x(x+1)/2）到K=3，4，…，可以先预估一下x的范围将所有的K对应的f先预处理一下，然后再对x进行更精细的二分（容易看出来x规模应该是O(L^(1/K))）。</p><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;p&gt;一栋楼有L层，在第x层或者更高扔鸡蛋会破，而第x层往下则不会。给K个鸡蛋，求x，要求最差的情况下扔鸡蛋的次数最少。&lt;/p&gt;
&lt;h2 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h2&gt;&lt;p&gt;不止在一个地方看到这道面试题了，这里小结一下。&lt;/p&gt;
&lt;p&gt;首先，归纳的去思考，K=1的时候，很显然，只能从第一层一个一个往上试，毕竟哪怕多跳一个，如果破了，就没办法知道x为当前层还是当前层减1。&lt;/p&gt;
&lt;p&gt;k=2的时候，很容易想到将楼层划分成多个区间，第一个鸡蛋用来确定x属于哪个区间，第二个鸡蛋想K=1时一样按顺序遍历该区间找到 x。那么问题就转换为怎么划分区间满足最坏情况下扔鸡蛋次数最少。首先，第一个鸡蛋需要从第一个区间开始遍历到最后一个区间。如果按等大小的方式划分区间，即第二个鸡蛋的遍历次数固定。那么最坏的情况是x在最后一个区间，此时第一个鸡蛋遍历的次数最多。为了使最坏情况下两个鸡蛋总共遍历的次数比较少，那么后面的区间大小要比前面的区间更小。具体来说就是，第一个鸡蛋每多遍历一次，第二个鸡蛋就要少遍历一次，才使得x无论在哪个区间，总共遍历的次数一样。设第一个区间大小为x，那么第二个区间的大小为x-1，以此类推。那么x+(x-1)+(x-2)+…+1&amp;gt;=L，得到x的下界（x取解的上取整），此时x为第一个区间的大小，同时也是最少的次数。（具体方案就是，从下到上依次试区间的最上端，如果没破，说明不在这个区间，否则在这个区间下端开始依次遍历，例如L=3，区间组成为2+1，第一次在第2层试，之后看结果在1或3层试，如果x不是正好取到下界，那么只可能区间更少或者区间数相同但对应长度不超过刚好取到时的情况，x次一定能完成，例如按照x+(x-1)+…+(L-sigma)，例如L=4，此时x取到3，区间分成3+1，一定不超过x正好取到3时（L=6）的3+2+1用的次数（当然其实也容易证明次数一定相等），当然也可以从上往下思考，变为1+2+1。）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以上讨论比较容易理解，但是为了更好地讨论K更大的情况，以上讨论要注意一点，就是这里取的每个区间的最上端其实准确来说是两个区间的分隔，不应当属于任何一个区间，比如考虑求到最后两个区间（2+1）了，其实本质是1+1+1，从中间分隔的1看出应该选上还是下，之所以这么思考，是因为子问题的定义就是每一层都是未知的，如果最后的2+1将2看为子问题并不妥，因为这个2的上面的1是已知的。因此计算式子应当表示为(x-1)+1+(x-2)+1+…+1+2+1+1+1，当然这和原来的本质没区别，只是理解方式不同。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;K=2已经讨论的很清楚了，那么K更大呢，其实已经发现K在从1增加到2时用了K=1的思想（子状态）。那么先考虑K=3是否能用上K=2的情形呢。其实是可以的，可以想到将楼层划分成多个“大”区间，每个区间里面解决K=2的情况（用第二和第三个鸡蛋，每个“大”区间里按照K=2去分“小”区间），第一个鸡蛋就负责遍历“大”区间，而且后面的区间大小也要比前面的区间更小，每上一层就要少用一次，最上面的区间用两个鸡蛋2次就能解决，大小为3（1+2），再往下的区间还是用2次（为什么？结合上一段的思考），大小为3，再下面应该是用3次，大小为6（3+2+1），然后4次……，直到最下面是x-1次，大小为x(x-1)/2，求出x（上取整）。考虑x=3，此时L最大为3+1+3=7，在第4层做第一次判断，决定后两个鸡蛋是在上3层做K=2还是下3层做K=2。&lt;/p&gt;
&lt;p&gt;K&amp;gt;3，相信看到这里应该都会推了。&lt;/p&gt;
&lt;h2 id=&quot;代码实现（此处并没有代码）&quot;&gt;&lt;a href=&quot;#代码实现（此处并没有代码）&quot; class=&quot;headerlink&quot; title=&quot;代码实现（此处并没有代码）&quot;&gt;&lt;/a&gt;代码实现&lt;del&gt;（此处并没有代码）&lt;/del&gt;&lt;/h2&gt;&lt;p&gt;作为面试题，这道题可以用在各行各业，作为程序猿，当然得写写代码。首先容易看出对x的求解是一个高次方程，因此不能直接用程序接出来&lt;del&gt;（至少我不会，大概可以用一些数值分析的方法，我猜？）&lt;/del&gt;，但是观察到f(x)关于x是单调递增的，因此可以二分答案，另外，其实f关于x也不是很明显有一步到位的式子表示的，因此还是需要迭代去求，从K=1的f（就是x）到K=2（x(x+1)/2）到K=3，4，…，可以先预估一下x的范围将所有的K对应的f先预处理一下，然后再对x进行更精细的二分（容易看出来x规模应该是O(L^(1/K))）。&lt;/p&gt;
    
    </summary>
    
      <category term="编程" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/"/>
    
      <category term="其他" scheme="http://tashi711.top/categories/%E7%BC%96%E7%A8%8B/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="设计模式" scheme="http://tashi711.top/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
</feed>
